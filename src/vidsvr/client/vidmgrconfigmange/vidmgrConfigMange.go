// Code generated by goctl. DO NOT EDIT.
// Source: vid.proto

package vidmgrconfigmange

import (
	"context"

	"github.com/i-Things/things/src/vidsvr/internal/svc"
	"github.com/i-Things/things/src/vidsvr/pb/vid"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PageInfo              = vid.PageInfo
	PageInfo_OrderBy      = vid.PageInfo_OrderBy
	Point                 = vid.Point
	Response              = vid.Response
	VidPlanInfo           = vid.VidPlanInfo
	ViddevInfo            = vid.ViddevInfo
	VidmgrConfig          = vid.VidmgrConfig
	VidmgrConfigDeleteReq = vid.VidmgrConfigDeleteReq
	VidmgrConfigIndexReq  = vid.VidmgrConfigIndexReq
	VidmgrConfigIndexResp = vid.VidmgrConfigIndexResp
	VidmgrConfigReadReq   = vid.VidmgrConfigReadReq
	VidmgrInfo            = vid.VidmgrInfo
	VidmgrInfoCountReq    = vid.VidmgrInfoCountReq
	VidmgrInfoCountResp   = vid.VidmgrInfoCountResp
	VidmgrInfoDeleteReq   = vid.VidmgrInfoDeleteReq
	VidmgrInfoIndexReq    = vid.VidmgrInfoIndexReq
	VidmgrInfoIndexResp   = vid.VidmgrInfoIndexResp
	VidmgrInfoReadReq     = vid.VidmgrInfoReadReq
	VidrecordfileInfo     = vid.VidrecordfileInfo
	VidstreamInfo         = vid.VidstreamInfo

	VidmgrConfigMange interface {
		// 新建配置
		VidmgrConfigCreate(ctx context.Context, in *VidmgrConfig, opts ...grpc.CallOption) (*Response, error)
		// 更新配置
		VidmgrConfigUpdate(ctx context.Context, in *VidmgrConfig, opts ...grpc.CallOption) (*Response, error)
		// 删除配置
		VidmgrConfigDelete(ctx context.Context, in *VidmgrConfigDeleteReq, opts ...grpc.CallOption) (*Response, error)
		// 配置列表
		VidmgrConfigIndex(ctx context.Context, in *VidmgrConfigIndexReq, opts ...grpc.CallOption) (*VidmgrConfigIndexResp, error)
		// 获取配置信息详情
		VidmgrConfigRead(ctx context.Context, in *VidmgrConfigReadReq, opts ...grpc.CallOption) (*VidmgrConfig, error)
	}

	defaultVidmgrConfigMange struct {
		cli zrpc.Client
	}

	directVidmgrConfigMange struct {
		svcCtx *svc.ServiceContext
		svr    vid.VidmgrConfigMangeServer
	}
)

func NewVidmgrConfigMange(cli zrpc.Client) VidmgrConfigMange {
	return &defaultVidmgrConfigMange{
		cli: cli,
	}
}

func NewDirectVidmgrConfigMange(svcCtx *svc.ServiceContext, svr vid.VidmgrConfigMangeServer) VidmgrConfigMange {
	return &directVidmgrConfigMange{
		svr:    svr,
		svcCtx: svcCtx,
	}
}

// 新建配置
func (m *defaultVidmgrConfigMange) VidmgrConfigCreate(ctx context.Context, in *VidmgrConfig, opts ...grpc.CallOption) (*Response, error) {
	client := vid.NewVidmgrConfigMangeClient(m.cli.Conn())
	return client.VidmgrConfigCreate(ctx, in, opts...)
}

// 新建配置
func (d *directVidmgrConfigMange) VidmgrConfigCreate(ctx context.Context, in *VidmgrConfig, opts ...grpc.CallOption) (*Response, error) {
	return d.svr.VidmgrConfigCreate(ctx, in)
}

// 更新配置
func (m *defaultVidmgrConfigMange) VidmgrConfigUpdate(ctx context.Context, in *VidmgrConfig, opts ...grpc.CallOption) (*Response, error) {
	client := vid.NewVidmgrConfigMangeClient(m.cli.Conn())
	return client.VidmgrConfigUpdate(ctx, in, opts...)
}

// 更新配置
func (d *directVidmgrConfigMange) VidmgrConfigUpdate(ctx context.Context, in *VidmgrConfig, opts ...grpc.CallOption) (*Response, error) {
	return d.svr.VidmgrConfigUpdate(ctx, in)
}

// 删除配置
func (m *defaultVidmgrConfigMange) VidmgrConfigDelete(ctx context.Context, in *VidmgrConfigDeleteReq, opts ...grpc.CallOption) (*Response, error) {
	client := vid.NewVidmgrConfigMangeClient(m.cli.Conn())
	return client.VidmgrConfigDelete(ctx, in, opts...)
}

// 删除配置
func (d *directVidmgrConfigMange) VidmgrConfigDelete(ctx context.Context, in *VidmgrConfigDeleteReq, opts ...grpc.CallOption) (*Response, error) {
	return d.svr.VidmgrConfigDelete(ctx, in)
}

// 配置列表
func (m *defaultVidmgrConfigMange) VidmgrConfigIndex(ctx context.Context, in *VidmgrConfigIndexReq, opts ...grpc.CallOption) (*VidmgrConfigIndexResp, error) {
	client := vid.NewVidmgrConfigMangeClient(m.cli.Conn())
	return client.VidmgrConfigIndex(ctx, in, opts...)
}

// 配置列表
func (d *directVidmgrConfigMange) VidmgrConfigIndex(ctx context.Context, in *VidmgrConfigIndexReq, opts ...grpc.CallOption) (*VidmgrConfigIndexResp, error) {
	return d.svr.VidmgrConfigIndex(ctx, in)
}

// 获取配置信息详情
func (m *defaultVidmgrConfigMange) VidmgrConfigRead(ctx context.Context, in *VidmgrConfigReadReq, opts ...grpc.CallOption) (*VidmgrConfig, error) {
	client := vid.NewVidmgrConfigMangeClient(m.cli.Conn())
	return client.VidmgrConfigRead(ctx, in, opts...)
}

// 获取配置信息详情
func (d *directVidmgrConfigMange) VidmgrConfigRead(ctx context.Context, in *VidmgrConfigReadReq, opts ...grpc.CallOption) (*VidmgrConfig, error) {
	return d.svr.VidmgrConfigRead(ctx, in)
}
