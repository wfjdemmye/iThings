// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: proto/dm.proto

//import "proto/schemaInfo.proto";

package dm

import (
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{0}
}

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// 排序信息
	Orders []*PageInfo_OrderBy `protobuf:"bytes,3,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{1}
}

func (x *PageInfo) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageInfo) GetOrders() []*PageInfo_OrderBy {
	if x != nil {
		return x.Orders
	}
	return nil
}

type ProductRemoteConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductID   string `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`
	Content     string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	CreatedTime int64  `protobuf:"varint,4,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
}

func (x *ProductRemoteConfig) Reset() {
	*x = ProductRemoteConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductRemoteConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductRemoteConfig) ProtoMessage() {}

func (x *ProductRemoteConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductRemoteConfig.ProtoReflect.Descriptor instead.
func (*ProductRemoteConfig) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{2}
}

func (x *ProductRemoteConfig) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductRemoteConfig) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *ProductRemoteConfig) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ProductRemoteConfig) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

type RemoteConfigCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`
	Content   string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *RemoteConfigCreateReq) Reset() {
	*x = RemoteConfigCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteConfigCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteConfigCreateReq) ProtoMessage() {}

func (x *RemoteConfigCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteConfigCreateReq.ProtoReflect.Descriptor instead.
func (*RemoteConfigCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{3}
}

func (x *RemoteConfigCreateReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *RemoteConfigCreateReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type RemoteConfigIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	ProductID string    `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`
}

func (x *RemoteConfigIndexReq) Reset() {
	*x = RemoteConfigIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteConfigIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteConfigIndexReq) ProtoMessage() {}

func (x *RemoteConfigIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteConfigIndexReq.ProtoReflect.Descriptor instead.
func (*RemoteConfigIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{4}
}

func (x *RemoteConfigIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *RemoteConfigIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

type RemoteConfigIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*ProductRemoteConfig `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RemoteConfigIndexResp) Reset() {
	*x = RemoteConfigIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteConfigIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteConfigIndexResp) ProtoMessage() {}

func (x *RemoteConfigIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteConfigIndexResp.ProtoReflect.Descriptor instead.
func (*RemoteConfigIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{5}
}

func (x *RemoteConfigIndexResp) GetList() []*ProductRemoteConfig {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RemoteConfigIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RemoteConfigPushAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`
}

func (x *RemoteConfigPushAllReq) Reset() {
	*x = RemoteConfigPushAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteConfigPushAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteConfigPushAllReq) ProtoMessage() {}

func (x *RemoteConfigPushAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteConfigPushAllReq.ProtoReflect.Descriptor instead.
func (*RemoteConfigPushAllReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{6}
}

func (x *RemoteConfigPushAllReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

type RemoteConfigLastReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`
}

func (x *RemoteConfigLastReadReq) Reset() {
	*x = RemoteConfigLastReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteConfigLastReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteConfigLastReadReq) ProtoMessage() {}

func (x *RemoteConfigLastReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteConfigLastReadReq.ProtoReflect.Descriptor instead.
func (*RemoteConfigLastReadReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{7}
}

func (x *RemoteConfigLastReadReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

type RemoteConfigLastReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ProductRemoteConfig `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *RemoteConfigLastReadResp) Reset() {
	*x = RemoteConfigLastReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteConfigLastReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteConfigLastReadResp) ProtoMessage() {}

func (x *RemoteConfigLastReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteConfigLastReadResp.ProtoReflect.Descriptor instead.
func (*RemoteConfigLastReadResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{8}
}

func (x *RemoteConfigLastReadResp) GetInfo() *ProductRemoteConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type ProductCustomReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`
}

func (x *ProductCustomReadReq) Reset() {
	*x = ProductCustomReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCustomReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCustomReadReq) ProtoMessage() {}

func (x *ProductCustomReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCustomReadReq.ProtoReflect.Descriptor instead.
func (*ProductCustomReadReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{9}
}

func (x *ProductCustomReadReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

type ProductCustom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID       string                `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`
	ScriptLang      int64                 `protobuf:"varint,3,opt,name=scriptLang,proto3" json:"scriptLang,omitempty"`          //脚本语言类型（默认JavaScript） 1:JavaScript 2:lua 3:python
	TransformScript *wrappers.StringValue `protobuf:"bytes,2,opt,name=transformScript,proto3" json:"transformScript,omitempty"` //协议转换脚本
	CustomTopic     []string              `protobuf:"bytes,4,rep,name=customTopic,proto3" json:"customTopic,omitempty"`         //自定义topic数组
}

func (x *ProductCustom) Reset() {
	*x = ProductCustom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCustom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCustom) ProtoMessage() {}

func (x *ProductCustom) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCustom.ProtoReflect.Descriptor instead.
func (*ProductCustom) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{10}
}

func (x *ProductCustom) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *ProductCustom) GetScriptLang() int64 {
	if x != nil {
		return x.ScriptLang
	}
	return 0
}

func (x *ProductCustom) GetTransformScript() *wrappers.StringValue {
	if x != nil {
		return x.TransformScript
	}
	return nil
}

func (x *ProductCustom) GetCustomTopic() []string {
	if x != nil {
		return x.CustomTopic
	}
	return nil
}

type DeviceGatewayBindDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string             `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	DeviceName string             `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名称
	Sign       *DeviceGatewaySign `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`             //签名
}

func (x *DeviceGatewayBindDevice) Reset() {
	*x = DeviceGatewayBindDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceGatewayBindDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceGatewayBindDevice) ProtoMessage() {}

func (x *DeviceGatewayBindDevice) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceGatewayBindDevice.ProtoReflect.Descriptor instead.
func (*DeviceGatewayBindDevice) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{11}
}

func (x *DeviceGatewayBindDevice) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DeviceGatewayBindDevice) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *DeviceGatewayBindDevice) GetSign() *DeviceGatewaySign {
	if x != nil {
		return x.Sign
	}
	return nil
}

type DeviceGatewaySign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 子设备绑定签名串。 签名算法：
	// 1. 签名原串，将产品 ID 设备名称，随机数，时间戳拼接：text=${product_id}${device_name};${random};${expiration_time}
	// 2. 使用设备 Psk 密钥，或者证书的 Sha1 摘要，进行签名：hmac_sha1(device_secret, text)
	Signature  string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Random     int64  `protobuf:"varint,4,opt,name=random,proto3" json:"random,omitempty"`        //随机数。
	Timestamp  int64  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`  //时间戳，单位：秒。
	SignMethod string `protobuf:"bytes,6,opt,name=signMethod,proto3" json:"signMethod,omitempty"` //签名算法。支持 hmacsha1、hmacsha256
}

func (x *DeviceGatewaySign) Reset() {
	*x = DeviceGatewaySign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceGatewaySign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceGatewaySign) ProtoMessage() {}

func (x *DeviceGatewaySign) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceGatewaySign.ProtoReflect.Descriptor instead.
func (*DeviceGatewaySign) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{12}
}

func (x *DeviceGatewaySign) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *DeviceGatewaySign) GetRandom() int64 {
	if x != nil {
		return x.Random
	}
	return 0
}

func (x *DeviceGatewaySign) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DeviceGatewaySign) GetSignMethod() string {
	if x != nil {
		return x.SignMethod
	}
	return ""
}

type DeviceGatewayMultiCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayProductID  string                     `protobuf:"bytes,1,opt,name=gatewayProductID,proto3" json:"gatewayProductID,omitempty"`
	GatewayDeviceName string                     `protobuf:"bytes,2,opt,name=gatewayDeviceName,proto3" json:"gatewayDeviceName,omitempty"`
	IsAuthSign        bool                       `protobuf:"varint,3,opt,name=isAuthSign,proto3" json:"isAuthSign,omitempty"` //是否校验设备签名
	List              []*DeviceGatewayBindDevice `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DeviceGatewayMultiCreateReq) Reset() {
	*x = DeviceGatewayMultiCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceGatewayMultiCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceGatewayMultiCreateReq) ProtoMessage() {}

func (x *DeviceGatewayMultiCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceGatewayMultiCreateReq.ProtoReflect.Descriptor instead.
func (*DeviceGatewayMultiCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{13}
}

func (x *DeviceGatewayMultiCreateReq) GetGatewayProductID() string {
	if x != nil {
		return x.GatewayProductID
	}
	return ""
}

func (x *DeviceGatewayMultiCreateReq) GetGatewayDeviceName() string {
	if x != nil {
		return x.GatewayDeviceName
	}
	return ""
}

func (x *DeviceGatewayMultiCreateReq) GetIsAuthSign() bool {
	if x != nil {
		return x.IsAuthSign
	}
	return false
}

func (x *DeviceGatewayMultiCreateReq) GetList() []*DeviceGatewayBindDevice {
	if x != nil {
		return x.List
	}
	return nil
}

type DeviceGatewayIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      *PageInfo   `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Gateway   *DeviceCore `protobuf:"bytes,2,opt,name=gateway,proto3" json:"gateway,omitempty"`     //获取网关下子设备列表
	SubDevice *DeviceCore `protobuf:"bytes,3,opt,name=subDevice,proto3" json:"subDevice,omitempty"` //获取子设备绑定的网关列表
}

func (x *DeviceGatewayIndexReq) Reset() {
	*x = DeviceGatewayIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceGatewayIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceGatewayIndexReq) ProtoMessage() {}

func (x *DeviceGatewayIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceGatewayIndexReq.ProtoReflect.Descriptor instead.
func (*DeviceGatewayIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{14}
}

func (x *DeviceGatewayIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *DeviceGatewayIndexReq) GetGateway() *DeviceCore {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *DeviceGatewayIndexReq) GetSubDevice() *DeviceCore {
	if x != nil {
		return x.SubDevice
	}
	return nil
}

type DeviceGatewayIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*DeviceInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *DeviceGatewayIndexResp) Reset() {
	*x = DeviceGatewayIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceGatewayIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceGatewayIndexResp) ProtoMessage() {}

func (x *DeviceGatewayIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceGatewayIndexResp.ProtoReflect.Descriptor instead.
func (*DeviceGatewayIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{15}
}

func (x *DeviceGatewayIndexResp) GetList() []*DeviceInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DeviceGatewayIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeviceGatewayMultiDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayProductID  string        `protobuf:"bytes,1,opt,name=gatewayProductID,proto3" json:"gatewayProductID,omitempty"`
	GatewayDeviceName string        `protobuf:"bytes,2,opt,name=gatewayDeviceName,proto3" json:"gatewayDeviceName,omitempty"`
	List              []*DeviceCore `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DeviceGatewayMultiDeleteReq) Reset() {
	*x = DeviceGatewayMultiDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceGatewayMultiDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceGatewayMultiDeleteReq) ProtoMessage() {}

func (x *DeviceGatewayMultiDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceGatewayMultiDeleteReq.ProtoReflect.Descriptor instead.
func (*DeviceGatewayMultiDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{16}
}

func (x *DeviceGatewayMultiDeleteReq) GetGatewayProductID() string {
	if x != nil {
		return x.GatewayProductID
	}
	return ""
}

func (x *DeviceGatewayMultiDeleteReq) GetGatewayDeviceName() string {
	if x != nil {
		return x.GatewayDeviceName
	}
	return ""
}

func (x *DeviceGatewayMultiDeleteReq) GetList() []*DeviceCore {
	if x != nil {
		return x.List
	}
	return nil
}

type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID     int64             `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	ParentID    int64             `protobuf:"varint,2,opt,name=parentID,proto3" json:"parentID,omitempty"`
	ProjectID   int64             `protobuf:"varint,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	GroupName   string            `protobuf:"bytes,4,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Desc        string            `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	CreatedTime int64             `protobuf:"varint,6,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	Tags        map[string]string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ProductID   string            `protobuf:"bytes,8,opt,name=productID,proto3" json:"productID,omitempty"`
	ProductName string            `protobuf:"bytes,9,opt,name=productName,proto3" json:"productName,omitempty"`
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{17}
}

func (x *GroupInfo) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *GroupInfo) GetParentID() int64 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *GroupInfo) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *GroupInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GroupInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GroupInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *GroupInfo) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GroupInfo) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *GroupInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

type GroupInfoCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
	ParentID  int64  `protobuf:"varint,2,opt,name=parentID,proto3" json:"parentID,omitempty"`
	ProductID string `protobuf:"bytes,3,opt,name=productID,proto3" json:"productID,omitempty"`
	Desc      string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *GroupInfoCreateReq) Reset() {
	*x = GroupInfoCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoCreateReq) ProtoMessage() {}

func (x *GroupInfoCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoCreateReq.ProtoReflect.Descriptor instead.
func (*GroupInfoCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{18}
}

func (x *GroupInfoCreateReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GroupInfoCreateReq) GetParentID() int64 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *GroupInfoCreateReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *GroupInfoCreateReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type GroupInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      *PageInfo         `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	GroupName string            `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName,omitempty"`
	ParentID  int64             `protobuf:"varint,3,opt,name=parentID,proto3" json:"parentID,omitempty"`
	Tags      map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GroupInfoIndexReq) Reset() {
	*x = GroupInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoIndexReq) ProtoMessage() {}

func (x *GroupInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoIndexReq.ProtoReflect.Descriptor instead.
func (*GroupInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{19}
}

func (x *GroupInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *GroupInfoIndexReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GroupInfoIndexReq) GetParentID() int64 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *GroupInfoIndexReq) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GroupInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*GroupInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total   int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	ListAll []*GroupInfo `protobuf:"bytes,3,rep,name=listAll,proto3" json:"listAll,omitempty"`
}

func (x *GroupInfoIndexResp) Reset() {
	*x = GroupInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoIndexResp) ProtoMessage() {}

func (x *GroupInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoIndexResp.ProtoReflect.Descriptor instead.
func (*GroupInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{20}
}

func (x *GroupInfoIndexResp) GetList() []*GroupInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GroupInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GroupInfoIndexResp) GetListAll() []*GroupInfo {
	if x != nil {
		return x.ListAll
	}
	return nil
}

type GroupInfoReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID int64 `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
}

func (x *GroupInfoReadReq) Reset() {
	*x = GroupInfoReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoReadReq) ProtoMessage() {}

func (x *GroupInfoReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoReadReq.ProtoReflect.Descriptor instead.
func (*GroupInfoReadReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{21}
}

func (x *GroupInfoReadReq) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

type GroupInfoUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID   int64             `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	GroupName string            `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Desc      string            `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Tags      map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ProductID string            `protobuf:"bytes,5,opt,name=productID,proto3" json:"productID,omitempty"`
}

func (x *GroupInfoUpdateReq) Reset() {
	*x = GroupInfoUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoUpdateReq) ProtoMessage() {}

func (x *GroupInfoUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoUpdateReq.ProtoReflect.Descriptor instead.
func (*GroupInfoUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{22}
}

func (x *GroupInfoUpdateReq) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *GroupInfoUpdateReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GroupInfoUpdateReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GroupInfoUpdateReq) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GroupInfoUpdateReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

type GroupInfoDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID int64 `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
}

func (x *GroupInfoDeleteReq) Reset() {
	*x = GroupInfoDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoDeleteReq) ProtoMessage() {}

func (x *GroupInfoDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoDeleteReq.ProtoReflect.Descriptor instead.
func (*GroupInfoDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{23}
}

func (x *GroupInfoDeleteReq) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

type GroupDeviceMultiCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID int64         `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	List    []*DeviceCore `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GroupDeviceMultiCreateReq) Reset() {
	*x = GroupDeviceMultiCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupDeviceMultiCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupDeviceMultiCreateReq) ProtoMessage() {}

func (x *GroupDeviceMultiCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupDeviceMultiCreateReq.ProtoReflect.Descriptor instead.
func (*GroupDeviceMultiCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{24}
}

func (x *GroupDeviceMultiCreateReq) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *GroupDeviceMultiCreateReq) GetList() []*DeviceCore {
	if x != nil {
		return x.List
	}
	return nil
}

type GroupDeviceIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	GroupID    int64     `protobuf:"varint,2,opt,name=groupID,proto3" json:"groupID,omitempty"`
	ProductID  string    `protobuf:"bytes,3,opt,name=productID,proto3" json:"productID,omitempty"`
	DeviceName string    `protobuf:"bytes,4,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
}

func (x *GroupDeviceIndexReq) Reset() {
	*x = GroupDeviceIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupDeviceIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupDeviceIndexReq) ProtoMessage() {}

func (x *GroupDeviceIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupDeviceIndexReq.ProtoReflect.Descriptor instead.
func (*GroupDeviceIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{25}
}

func (x *GroupDeviceIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *GroupDeviceIndexReq) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *GroupDeviceIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *GroupDeviceIndexReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type GroupDeviceIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*DeviceInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GroupDeviceIndexResp) Reset() {
	*x = GroupDeviceIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupDeviceIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupDeviceIndexResp) ProtoMessage() {}

func (x *GroupDeviceIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupDeviceIndexResp.ProtoReflect.Descriptor instead.
func (*GroupDeviceIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{26}
}

func (x *GroupDeviceIndexResp) GetList() []*DeviceInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GroupDeviceIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GroupDeviceMultiDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID int64         `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	List    []*DeviceCore `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GroupDeviceMultiDeleteReq) Reset() {
	*x = GroupDeviceMultiDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupDeviceMultiDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupDeviceMultiDeleteReq) ProtoMessage() {}

func (x *GroupDeviceMultiDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupDeviceMultiDeleteReq.ProtoReflect.Descriptor instead.
func (*GroupDeviceMultiDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{27}
}

func (x *GroupDeviceMultiDeleteReq) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *GroupDeviceMultiDeleteReq) GetList() []*DeviceCore {
	if x != nil {
		return x.List
	}
	return nil
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Longitude float64 `protobuf:"fixed64,1,opt,name=longitude,proto3" json:"longitude,omitempty"` //经度
	Latitude  float64 `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`   //纬度
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{28}
}

func (x *Point) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Point) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type DeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID      string                `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`                                                                                //产品id 只读
	ProjectID      *wrappers.Int64Value  `protobuf:"bytes,2,opt,name=projectID,proto3" json:"projectID,omitempty"`                                                                                //项目id 只读（nil不更新，0为未分类，other则更新）
	AreaID         *wrappers.Int64Value  `protobuf:"bytes,3,opt,name=areaID,proto3" json:"areaID,omitempty"`                                                                                      //项目区域id 只读（nil不更新，0为未分类，other则更新）
	ProductName    string                `protobuf:"bytes,4,opt,name=productName,proto3" json:"productName,omitempty"`                                                                            //产品名称 只读
	DeviceName     string                `protobuf:"bytes,5,opt,name=deviceName,proto3" json:"deviceName,omitempty"`                                                                              //设备名称 读写
	CreatedTime    int64                 `protobuf:"varint,6,opt,name=createdTime,proto3" json:"createdTime,omitempty"`                                                                           //创建时间 只读
	Secret         string                `protobuf:"bytes,7,opt,name=secret,proto3" json:"secret,omitempty"`                                                                                      //设备秘钥 只读
	Cert           string                `protobuf:"bytes,8,opt,name=cert,proto3" json:"cert,omitempty"`                                                                                          // 设备证书  只读
	Imei           string                `protobuf:"bytes,9,opt,name=imei,proto3" json:"imei,omitempty"`                                                                                          //IMEI号信息 只读
	Mac            string                `protobuf:"bytes,10,opt,name=mac,proto3" json:"mac,omitempty"`                                                                                           //MAC号信息 只读
	Version        *wrappers.StringValue `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`                                                                                   // 固件版本  读写
	HardInfo       string                `protobuf:"bytes,12,opt,name=hardInfo,proto3" json:"hardInfo,omitempty"`                                                                                 //模组硬件型号 只读
	SoftInfo       string                `protobuf:"bytes,13,opt,name=softInfo,proto3" json:"softInfo,omitempty"`                                                                                 //模组软件版本 只读
	Position       *Point                `protobuf:"bytes,14,opt,name=Position,proto3" json:"Position,omitempty"`                                                                                 //设备定位,默认百度坐标系
	Address        *wrappers.StringValue `protobuf:"bytes,15,opt,name=address,proto3" json:"address,omitempty"`                                                                                   // 所在地址 读写
	Tags           map[string]string     `protobuf:"bytes,16,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //设备标签
	IsOnline       int64                 `protobuf:"varint,17,opt,name=isOnline,proto3" json:"isOnline,omitempty"`                                                                                //在线状态  1离线 2在线 只读
	FirstLogin     int64                 `protobuf:"varint,18,opt,name=firstLogin,proto3" json:"firstLogin,omitempty"`                                                                            //激活时间 只读
	LastLogin      int64                 `protobuf:"varint,19,opt,name=lastLogin,proto3" json:"lastLogin,omitempty"`                                                                              //最后上线时间 只读
	LogLevel       int64                 `protobuf:"varint,20,opt,name=logLevel,proto3" json:"logLevel,omitempty"`                                                                                // 日志级别:1)关闭 2)错误 3)告警 4)信息 5)调试  读写
	DeviceAlias    *wrappers.StringValue `protobuf:"bytes,21,opt,name=deviceAlias,proto3" json:"deviceAlias,omitempty"`                                                                           //设备别名 读写
	MobileOperator int64                 `protobuf:"varint,22,opt,name=mobileOperator,proto3" json:"mobileOperator,omitempty"`                                                                    //移动运营商:1)移动 2)联通 3)电信 4)广电
	Phone          *wrappers.StringValue `protobuf:"bytes,23,opt,name=phone,proto3" json:"phone,omitempty"`                                                                                       //手机号
	Iccid          *wrappers.StringValue `protobuf:"bytes,24,opt,name=iccid,proto3" json:"iccid,omitempty"`                                                                                       //SIM卡卡号
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{29}
}

func (x *DeviceInfo) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DeviceInfo) GetProjectID() *wrappers.Int64Value {
	if x != nil {
		return x.ProjectID
	}
	return nil
}

func (x *DeviceInfo) GetAreaID() *wrappers.Int64Value {
	if x != nil {
		return x.AreaID
	}
	return nil
}

func (x *DeviceInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *DeviceInfo) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *DeviceInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *DeviceInfo) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *DeviceInfo) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *DeviceInfo) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *DeviceInfo) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *DeviceInfo) GetVersion() *wrappers.StringValue {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *DeviceInfo) GetHardInfo() string {
	if x != nil {
		return x.HardInfo
	}
	return ""
}

func (x *DeviceInfo) GetSoftInfo() string {
	if x != nil {
		return x.SoftInfo
	}
	return ""
}

func (x *DeviceInfo) GetPosition() *Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *DeviceInfo) GetAddress() *wrappers.StringValue {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *DeviceInfo) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DeviceInfo) GetIsOnline() int64 {
	if x != nil {
		return x.IsOnline
	}
	return 0
}

func (x *DeviceInfo) GetFirstLogin() int64 {
	if x != nil {
		return x.FirstLogin
	}
	return 0
}

func (x *DeviceInfo) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *DeviceInfo) GetLogLevel() int64 {
	if x != nil {
		return x.LogLevel
	}
	return 0
}

func (x *DeviceInfo) GetDeviceAlias() *wrappers.StringValue {
	if x != nil {
		return x.DeviceAlias
	}
	return nil
}

func (x *DeviceInfo) GetMobileOperator() int64 {
	if x != nil {
		return x.MobileOperator
	}
	return 0
}

func (x *DeviceInfo) GetPhone() *wrappers.StringValue {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *DeviceInfo) GetIccid() *wrappers.StringValue {
	if x != nil {
		return x.Iccid
	}
	return nil
}

type ProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedTime        int64                 `protobuf:"varint,1,opt,name=createdTime,proto3" json:"createdTime,omitempty"`                                                                           //创建时间 只读
	ProductID          string                `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`                                                                                //产品id 只读
	ProductName        string                `protobuf:"bytes,3,opt,name=productName,proto3" json:"productName,omitempty"`                                                                            //产品名称
	AuthMode           int64                 `protobuf:"varint,4,opt,name=authMode,proto3" json:"authMode,omitempty"`                                                                                 //认证方式:1:账密认证,2:秘钥认证
	DeviceType         int64                 `protobuf:"varint,5,opt,name=deviceType,proto3" json:"deviceType,omitempty"`                                                                             //设备类型:1:设备,2:网关,3:子设备
	CategoryID         int64                 `protobuf:"varint,6,opt,name=categoryID,proto3" json:"categoryID,omitempty"`                                                                             //产品品类
	NetType            int64                 `protobuf:"varint,7,opt,name=netType,proto3" json:"netType,omitempty"`                                                                                   //通讯方式:1:其他,2:wi-fi,3:2G/3G/4G,4:5G,5:BLE,6:LoRaWAN
	DataProto          int64                 `protobuf:"varint,8,opt,name=dataProto,proto3" json:"dataProto,omitempty"`                                                                               //数据协议:1:自定义,2:数据模板
	AutoRegister       int64                 `protobuf:"varint,9,opt,name=autoRegister,proto3" json:"autoRegister,omitempty"`                                                                         //动态注册:1:关闭,2:打开,3:打开并自动创建设备
	Secret             string                `protobuf:"bytes,10,opt,name=secret,proto3" json:"secret,omitempty"`                                                                                     //动态注册产品秘钥 只读
	Desc               *wrappers.StringValue `protobuf:"bytes,11,opt,name=desc,proto3" json:"desc,omitempty"`                                                                                         //描述
	DevStatus          *wrappers.StringValue `protobuf:"bytes,12,opt,name=devStatus,proto3" json:"devStatus,omitempty"`                                                                               // 产品状态
	Tags               map[string]string     `protobuf:"bytes,13,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //产品标签
	ProductImg         string                `protobuf:"bytes,14,opt,name=productImg,proto3" json:"productImg,omitempty"`                                                                             //产品图片
	IsUpdateProductImg bool                  `protobuf:"varint,15,opt,name=isUpdateProductImg,proto3" json:"isUpdateProductImg,omitempty"`                                                            //只有这个参数为true的时候才会更新产品图片,传参为产品图片的file path
}

func (x *ProductInfo) Reset() {
	*x = ProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfo) ProtoMessage() {}

func (x *ProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfo.ProtoReflect.Descriptor instead.
func (*ProductInfo) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{30}
}

func (x *ProductInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *ProductInfo) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *ProductInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ProductInfo) GetAuthMode() int64 {
	if x != nil {
		return x.AuthMode
	}
	return 0
}

func (x *ProductInfo) GetDeviceType() int64 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *ProductInfo) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *ProductInfo) GetNetType() int64 {
	if x != nil {
		return x.NetType
	}
	return 0
}

func (x *ProductInfo) GetDataProto() int64 {
	if x != nil {
		return x.DataProto
	}
	return 0
}

func (x *ProductInfo) GetAutoRegister() int64 {
	if x != nil {
		return x.AutoRegister
	}
	return 0
}

func (x *ProductInfo) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *ProductInfo) GetDesc() *wrappers.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *ProductInfo) GetDevStatus() *wrappers.StringValue {
	if x != nil {
		return x.DevStatus
	}
	return nil
}

func (x *ProductInfo) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ProductInfo) GetProductImg() string {
	if x != nil {
		return x.ProductImg
	}
	return ""
}

func (x *ProductInfo) GetIsUpdateProductImg() bool {
	if x != nil {
		return x.IsUpdateProductImg
	}
	return false
}

type ProductInfoDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"` //产品id
}

func (x *ProductInfoDeleteReq) Reset() {
	*x = ProductInfoDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfoDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfoDeleteReq) ProtoMessage() {}

func (x *ProductInfoDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfoDeleteReq.ProtoReflect.Descriptor instead.
func (*ProductInfoDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{31}
}

func (x *ProductInfoDeleteReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

type ProductInfoReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"` //产品id
}

func (x *ProductInfoReadReq) Reset() {
	*x = ProductInfoReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfoReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfoReadReq) ProtoMessage() {}

func (x *ProductInfoReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfoReadReq.ProtoReflect.Descriptor instead.
func (*ProductInfoReadReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{32}
}

func (x *ProductInfoReadReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

type ProductInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *PageInfo         `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                                                                                         //分页信息 只获取一个则不填
	DeviceType  int64             `protobuf:"varint,2,opt,name=deviceType,proto3" json:"deviceType,omitempty"`                                                                            //过滤设备类型:0:全部,1:设备,2:网关,3:子设备
	ProductName string            `protobuf:"bytes,3,opt,name=productName,proto3" json:"productName,omitempty"`                                                                           //过滤条件: 产品名称
	ProductIDs  []string          `protobuf:"bytes,4,rep,name=productIDs,proto3" json:"productIDs,omitempty"`                                                                             //过滤产品id列表
	Tags        map[string]string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //key tag过滤查询,非模糊查询 为tag的名,value为tag对应的值
}

func (x *ProductInfoIndexReq) Reset() {
	*x = ProductInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfoIndexReq) ProtoMessage() {}

func (x *ProductInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfoIndexReq.ProtoReflect.Descriptor instead.
func (*ProductInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{33}
}

func (x *ProductInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ProductInfoIndexReq) GetDeviceType() int64 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *ProductInfoIndexReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ProductInfoIndexReq) GetProductIDs() []string {
	if x != nil {
		return x.ProductIDs
	}
	return nil
}

func (x *ProductInfoIndexReq) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ProductInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*ProductInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //产品信息
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *ProductInfoIndexResp) Reset() {
	*x = ProductInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfoIndexResp) ProtoMessage() {}

func (x *ProductInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfoIndexResp.ProtoReflect.Descriptor instead.
func (*ProductInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{34}
}

func (x *ProductInfoIndexResp) GetList() []*ProductInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ProductInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeviceInfoDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	DeviceName string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名称
}

func (x *DeviceInfoDeleteReq) Reset() {
	*x = DeviceInfoDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoDeleteReq) ProtoMessage() {}

func (x *DeviceInfoDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoDeleteReq.ProtoReflect.Descriptor instead.
func (*DeviceInfoDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{35}
}

func (x *DeviceInfoDeleteReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DeviceInfoDeleteReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type DeviceCore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	DeviceName string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名称
}

func (x *DeviceCore) Reset() {
	*x = DeviceCore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceCore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCore) ProtoMessage() {}

func (x *DeviceCore) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceCore.ProtoReflect.Descriptor instead.
func (*DeviceCore) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{36}
}

func (x *DeviceCore) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DeviceCore) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type DeviceInfoReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	DeviceName string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名称
}

func (x *DeviceInfoReadReq) Reset() {
	*x = DeviceInfoReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoReadReq) ProtoMessage() {}

func (x *DeviceInfoReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoReadReq.ProtoReflect.Descriptor instead.
func (*DeviceInfoReadReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{37}
}

func (x *DeviceInfoReadReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DeviceInfoReadReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type DeviceInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *PageInfo         `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                                                                                         //分页信息 只获取一个则不填
	ProductID   string            `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`                                                                               //过滤条件: 产品id
	DeviceName  string            `protobuf:"bytes,3,opt,name=deviceName,proto3" json:"deviceName,omitempty"`                                                                             //过滤条件:模糊查询 设备名
	DeviceNames []string          `protobuf:"bytes,4,rep,name=deviceNames,proto3" json:"deviceNames,omitempty"`                                                                           //过滤条件:精准查询 设备名
	Tags        map[string]string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //key tag过滤查询,非模糊查询 为tag的名,value为tag对应的值
	Range       int64             `protobuf:"varint,6,opt,name=range,proto3" json:"range,omitempty"`                                                                                      //过滤条件:取距离坐标点固定范围内的设备
	Position    *Point            `protobuf:"bytes,7,opt,name=Position,proto3" json:"Position,omitempty"`                                                                                 //设备定位,默认百度坐标系
	AreaIDs     []int64           `protobuf:"varint,8,rep,packed,name=areaIDs,proto3" json:"areaIDs,omitempty"`                                                                           //区域ids
	DeviceAlias string            `protobuf:"bytes,9,opt,name=deviceAlias,proto3" json:"deviceAlias,omitempty"`                                                                           //过滤条件:模糊查询 设备别名
	IsOnline    int64             `protobuf:"varint,10,opt,name=isOnline,proto3" json:"isOnline,omitempty"`                                                                               //在线状态过滤  1离线 2在线
}

func (x *DeviceInfoIndexReq) Reset() {
	*x = DeviceInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoIndexReq) ProtoMessage() {}

func (x *DeviceInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoIndexReq.ProtoReflect.Descriptor instead.
func (*DeviceInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{38}
}

func (x *DeviceInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *DeviceInfoIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DeviceInfoIndexReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *DeviceInfoIndexReq) GetDeviceNames() []string {
	if x != nil {
		return x.DeviceNames
	}
	return nil
}

func (x *DeviceInfoIndexReq) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DeviceInfoIndexReq) GetRange() int64 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *DeviceInfoIndexReq) GetPosition() *Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *DeviceInfoIndexReq) GetAreaIDs() []int64 {
	if x != nil {
		return x.AreaIDs
	}
	return nil
}

func (x *DeviceInfoIndexReq) GetDeviceAlias() string {
	if x != nil {
		return x.DeviceAlias
	}
	return ""
}

func (x *DeviceInfoIndexReq) GetIsOnline() int64 {
	if x != nil {
		return x.IsOnline
	}
	return 0
}

type DeviceInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*DeviceInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //设备信息
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *DeviceInfoIndexResp) Reset() {
	*x = DeviceInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoIndexResp) ProtoMessage() {}

func (x *DeviceInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoIndexResp.ProtoReflect.Descriptor instead.
func (*DeviceInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{39}
}

func (x *DeviceInfoIndexResp) GetList() []*DeviceInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DeviceInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 下面是设备管理模块的消息
type LoginAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`       //用户名
	Password    string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`       //密码
	ClientID    string `protobuf:"bytes,3,opt,name=clientID,proto3" json:"clientID,omitempty"`       //clientID
	Ip          string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`                   //访问的ip地址
	Certificate []byte `protobuf:"bytes,5,opt,name=certificate,proto3" json:"certificate,omitempty"` //客户端证书
}

func (x *LoginAuthReq) Reset() {
	*x = LoginAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginAuthReq) ProtoMessage() {}

func (x *LoginAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginAuthReq.ProtoReflect.Descriptor instead.
func (*LoginAuthReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{40}
}

func (x *LoginAuthReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginAuthReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginAuthReq) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *LoginAuthReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LoginAuthReq) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type AccessAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` //用户名
	Topic    string `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`       //主题
	ClientID string `protobuf:"bytes,3,opt,name=clientID,proto3" json:"clientID,omitempty"` //clientID
	Access   string `protobuf:"bytes,4,opt,name=access,proto3" json:"access,omitempty"`     //操作
	Ip       string `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`             //访问的ip地址
}

func (x *AccessAuthReq) Reset() {
	*x = AccessAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessAuthReq) ProtoMessage() {}

func (x *AccessAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessAuthReq.ProtoReflect.Descriptor instead.
func (*AccessAuthReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{41}
}

func (x *AccessAuthReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AccessAuthReq) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *AccessAuthReq) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *AccessAuthReq) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

func (x *AccessAuthReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type RootCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`       //用户名
	Password    string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`       //密码
	ClientID    string `protobuf:"bytes,3,opt,name=clientID,proto3" json:"clientID,omitempty"`       //clientID
	Ip          string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`                   //访问的ip地址
	Certificate []byte `protobuf:"bytes,5,opt,name=certificate,proto3" json:"certificate,omitempty"` //客户端证书
}

func (x *RootCheckReq) Reset() {
	*x = RootCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootCheckReq) ProtoMessage() {}

func (x *RootCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootCheckReq.ProtoReflect.Descriptor instead.
func (*RootCheckReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{42}
}

func (x *RootCheckReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RootCheckReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RootCheckReq) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *RootCheckReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RootCheckReq) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type ProductSchemaUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ProductSchemaInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` //物模型信息
}

func (x *ProductSchemaUpdateReq) Reset() {
	*x = ProductSchemaUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSchemaUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSchemaUpdateReq) ProtoMessage() {}

func (x *ProductSchemaUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSchemaUpdateReq.ProtoReflect.Descriptor instead.
func (*ProductSchemaUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{43}
}

func (x *ProductSchemaUpdateReq) GetInfo() *ProductSchemaInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type ProductSchemaCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ProductSchemaInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` //物模型信息
}

func (x *ProductSchemaCreateReq) Reset() {
	*x = ProductSchemaCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSchemaCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSchemaCreateReq) ProtoMessage() {}

func (x *ProductSchemaCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSchemaCreateReq.ProtoReflect.Descriptor instead.
func (*ProductSchemaCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{44}
}

func (x *ProductSchemaCreateReq) GetInfo() *ProductSchemaInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type ProductSchemaDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id  如果为空返回所有产品的信息
	Identifier string `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"` //标识符
}

func (x *ProductSchemaDeleteReq) Reset() {
	*x = ProductSchemaDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSchemaDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSchemaDeleteReq) ProtoMessage() {}

func (x *ProductSchemaDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSchemaDeleteReq.ProtoReflect.Descriptor instead.
func (*ProductSchemaDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{45}
}

func (x *ProductSchemaDeleteReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *ProductSchemaDeleteReq) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type ProductSchemaIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`               //分页信息 只获取一个则不填
	ProductID   string    `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`     //产品id  必填
	Type        int64     `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`              //物模型类型 1:property属性 2:event事件 3:action行为
	Tag         int64     `protobuf:"varint,4,opt,name=tag,proto3" json:"tag,omitempty"`                //过滤条件: 物模型标签 1:自定义 2:可选 3:必选
	Identifiers []string  `protobuf:"bytes,5,rep,name=identifiers,proto3" json:"identifiers,omitempty"` //过滤标识符列表
}

func (x *ProductSchemaIndexReq) Reset() {
	*x = ProductSchemaIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSchemaIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSchemaIndexReq) ProtoMessage() {}

func (x *ProductSchemaIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSchemaIndexReq.ProtoReflect.Descriptor instead.
func (*ProductSchemaIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{46}
}

func (x *ProductSchemaIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ProductSchemaIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *ProductSchemaIndexReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ProductSchemaIndexReq) GetTag() int64 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *ProductSchemaIndexReq) GetIdentifiers() []string {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type ProductSchemaIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*ProductSchemaInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *ProductSchemaIndexResp) Reset() {
	*x = ProductSchemaIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSchemaIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSchemaIndexResp) ProtoMessage() {}

func (x *ProductSchemaIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSchemaIndexResp.ProtoReflect.Descriptor instead.
func (*ProductSchemaIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{47}
}

func (x *ProductSchemaIndexResp) GetList() []*ProductSchemaInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ProductSchemaIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ProductSchemaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string                `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id  必填
	Type       int64                 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`            //物模型类型 1:property属性 2:event事件 3:action行为
	Tag        int64                 `protobuf:"varint,3,opt,name=tag,proto3" json:"tag,omitempty"`              //物模型标签 1:自定义 2:可选 3:必选  必选不可删除
	Identifier string                `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"` //标识符
	Name       *wrappers.StringValue `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`             //功能名称
	Desc       *wrappers.StringValue `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`             //描述
	Required   int64                 `protobuf:"varint,7,opt,name=required,proto3" json:"required,omitempty"`    //是否必须 1:是 2:否
	Affordance *wrappers.StringValue `protobuf:"bytes,8,opt,name=affordance,proto3" json:"affordance,omitempty"` //各功能类型的详细参数定义
}

func (x *ProductSchemaInfo) Reset() {
	*x = ProductSchemaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSchemaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSchemaInfo) ProtoMessage() {}

func (x *ProductSchemaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSchemaInfo.ProtoReflect.Descriptor instead.
func (*ProductSchemaInfo) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{48}
}

func (x *ProductSchemaInfo) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *ProductSchemaInfo) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ProductSchemaInfo) GetTag() int64 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *ProductSchemaInfo) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ProductSchemaInfo) GetName() *wrappers.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ProductSchemaInfo) GetDesc() *wrappers.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *ProductSchemaInfo) GetRequired() int64 {
	if x != nil {
		return x.Required
	}
	return 0
}

func (x *ProductSchemaInfo) GetAffordance() *wrappers.StringValue {
	if x != nil {
		return x.Affordance
	}
	return nil
}

type ProductSchemaTslImportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"` //产品id
	Tsl       string `protobuf:"bytes,2,opt,name=tsl,proto3" json:"tsl,omitempty"`             //物模型tsl
}

func (x *ProductSchemaTslImportReq) Reset() {
	*x = ProductSchemaTslImportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSchemaTslImportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSchemaTslImportReq) ProtoMessage() {}

func (x *ProductSchemaTslImportReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSchemaTslImportReq.ProtoReflect.Descriptor instead.
func (*ProductSchemaTslImportReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{49}
}

func (x *ProductSchemaTslImportReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *ProductSchemaTslImportReq) GetTsl() string {
	if x != nil {
		return x.Tsl
	}
	return ""
}

type ProductSchemaTslReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"` //产品id
}

func (x *ProductSchemaTslReadReq) Reset() {
	*x = ProductSchemaTslReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSchemaTslReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSchemaTslReadReq) ProtoMessage() {}

func (x *ProductSchemaTslReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSchemaTslReadReq.ProtoReflect.Descriptor instead.
func (*ProductSchemaTslReadReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{50}
}

func (x *ProductSchemaTslReadReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

type ProductSchemaTslReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tsl string `protobuf:"bytes,1,opt,name=tsl,proto3" json:"tsl,omitempty"` //物模型tsl
}

func (x *ProductSchemaTslReadResp) Reset() {
	*x = ProductSchemaTslReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSchemaTslReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSchemaTslReadResp) ProtoMessage() {}

func (x *ProductSchemaTslReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSchemaTslReadResp.ProtoReflect.Descriptor instead.
func (*ProductSchemaTslReadResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{51}
}

func (x *ProductSchemaTslReadResp) GetTsl() string {
	if x != nil {
		return x.Tsl
	}
	return ""
}

type DeviceInfoCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64 `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"` // 查询区间 开始
	EndTime   int64 `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`     // 查询区间 结束
}

func (x *DeviceInfoCountReq) Reset() {
	*x = DeviceInfoCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoCountReq) ProtoMessage() {}

func (x *DeviceInfoCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoCountReq.ProtoReflect.Descriptor instead.
func (*DeviceInfoCountReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{52}
}

func (x *DeviceInfoCountReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *DeviceInfoCountReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type DeviceTypeCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64 `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"` // 查询区间 开始
	EndTime   int64 `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`     // 查询区间 结束
}

func (x *DeviceTypeCountReq) Reset() {
	*x = DeviceTypeCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceTypeCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceTypeCountReq) ProtoMessage() {}

func (x *DeviceTypeCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceTypeCountReq.ProtoReflect.Descriptor instead.
func (*DeviceTypeCountReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{53}
}

func (x *DeviceTypeCountReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *DeviceTypeCountReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type DeviceInfoCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Online   int64 `protobuf:"varint,1,opt,name=online,proto3" json:"online,omitempty"`
	Offline  int64 `protobuf:"varint,2,opt,name=offline,proto3" json:"offline,omitempty"`
	Inactive int64 `protobuf:"varint,3,opt,name=inactive,proto3" json:"inactive,omitempty"`
	Unknown  int64 `protobuf:"varint,4,opt,name=unknown,proto3" json:"unknown,omitempty"`
}

func (x *DeviceInfoCountResp) Reset() {
	*x = DeviceInfoCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoCountResp) ProtoMessage() {}

func (x *DeviceInfoCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoCountResp.ProtoReflect.Descriptor instead.
func (*DeviceInfoCountResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{54}
}

func (x *DeviceInfoCountResp) GetOnline() int64 {
	if x != nil {
		return x.Online
	}
	return 0
}

func (x *DeviceInfoCountResp) GetOffline() int64 {
	if x != nil {
		return x.Offline
	}
	return 0
}

func (x *DeviceInfoCountResp) GetInactive() int64 {
	if x != nil {
		return x.Inactive
	}
	return 0
}

func (x *DeviceInfoCountResp) GetUnknown() int64 {
	if x != nil {
		return x.Unknown
	}
	return 0
}

type DeviceTypeCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device  int64 `protobuf:"varint,1,opt,name=device,proto3" json:"device,omitempty"`
	Gateway int64 `protobuf:"varint,2,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Subset  int64 `protobuf:"varint,3,opt,name=subset,proto3" json:"subset,omitempty"`
	Unknown int64 `protobuf:"varint,4,opt,name=unknown,proto3" json:"unknown,omitempty"`
}

func (x *DeviceTypeCountResp) Reset() {
	*x = DeviceTypeCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceTypeCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceTypeCountResp) ProtoMessage() {}

func (x *DeviceTypeCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceTypeCountResp.ProtoReflect.Descriptor instead.
func (*DeviceTypeCountResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{55}
}

func (x *DeviceTypeCountResp) GetDevice() int64 {
	if x != nil {
		return x.Device
	}
	return 0
}

func (x *DeviceTypeCountResp) GetGateway() int64 {
	if x != nil {
		return x.Gateway
	}
	return 0
}

func (x *DeviceTypeCountResp) GetSubset() int64 {
	if x != nil {
		return x.Subset
	}
	return 0
}

func (x *DeviceTypeCountResp) GetUnknown() int64 {
	if x != nil {
		return x.Unknown
	}
	return 0
}

type DeviceRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	DeviceName string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名称
	Nonce      int64  `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`          //随机数
	Timestamp  int64  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`  //秒级时间戳
	Signature  string `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`   //签名信息
}

func (x *DeviceRegisterReq) Reset() {
	*x = DeviceRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceRegisterReq) ProtoMessage() {}

func (x *DeviceRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceRegisterReq.ProtoReflect.Descriptor instead.
func (*DeviceRegisterReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{56}
}

func (x *DeviceRegisterReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DeviceRegisterReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *DeviceRegisterReq) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *DeviceRegisterReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DeviceRegisterReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type DeviceRegisterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Len int64 `protobuf:"varint,1,opt,name=len,proto3" json:"len,omitempty"` //payload加密前信息的长度
	// 加密过程将原始 JSON 格式的 payload 转为字符串后进行 AES 加密，再进行 base64 加密。AES 加密算法为 CBC 模式，密钥长度128，取 productSecret 前16位，偏移量为长度16的字符“0”。
	// 原始 payload 内容说明：
	// key                value               描述
	// encryptionType     1              加密类型，1表示证书认证，2表示签名认证。
	// psk                1239           设备密钥，当产品认证类型为签名认证时有此参数
	// clientCert         -              设备证书文件字符串格式，当产品认证类型为证书认证时有此参数。
	// clientKey          -              设备私钥文件字符串格式，当产品认证类型为证书认证时有此参数。
	Payload string `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *DeviceRegisterResp) Reset() {
	*x = DeviceRegisterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceRegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceRegisterResp) ProtoMessage() {}

func (x *DeviceRegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceRegisterResp.ProtoReflect.Descriptor instead.
func (*DeviceRegisterResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{57}
}

func (x *DeviceRegisterResp) GetLen() int64 {
	if x != nil {
		return x.Len
	}
	return 0
}

func (x *DeviceRegisterResp) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type PageInfo_OrderBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 排序的字段名
	Filed string `protobuf:"bytes,1,opt,name=filed,proto3" json:"filed,omitempty"`
	// 排序方式：0 aes, 1 desc
	Sort int64 `protobuf:"varint,2,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *PageInfo_OrderBy) Reset() {
	*x = PageInfo_OrderBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo_OrderBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo_OrderBy) ProtoMessage() {}

func (x *PageInfo_OrderBy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo_OrderBy.ProtoReflect.Descriptor instead.
func (*PageInfo_OrderBy) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{1, 0}
}

func (x *PageInfo_OrderBy) GetFiled() string {
	if x != nil {
		return x.Filed
	}
	return ""
}

func (x *PageInfo_OrderBy) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

var File_proto_dm_proto protoreflect.FileDescriptor

var file_proto_dm_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x64, 0x6d, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x95, 0x01, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x06, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x1a, 0x33, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x7f, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x15, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x14, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x22, 0x5a, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x36,
	0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x75,
	0x73, 0x68, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0x37, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22,
	0x47, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x34, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0xb7,
	0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x46,
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x69, 0x6e, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x87, 0x01,
	0x0a, 0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53,
	0x69, 0x67, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67,
	0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x53, 0x69, 0x67,
	0x6e, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x42, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x6d, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x28,
	0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x52,
	0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x2c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x6d,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x52, 0x0a, 0x16, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9b, 0x01, 0x0a, 0x1b, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd9, 0x02, 0x0a, 0x09, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64,
	0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x54,
	0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x80, 0x01, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0xdd, 0x01, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x6d,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x2e, 0x54,
	0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37,
	0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x76, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x22,
	0x2c, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0xed, 0x01,
	0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x34, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a,
	0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x59, 0x0a,
	0x19, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x13, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x14, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x59, 0x0a, 0x19,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0xcc, 0x07, 0x0a, 0x0a, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x61, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x36, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a,
	0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6d, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x05,
	0x69, 0x63, 0x63, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x69, 0x63, 0x63, 0x69, 0x64,
	0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe5, 0x04, 0x0a, 0x0b, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x75, 0x74, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61,
	0x75, 0x74, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x3a, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09,
	0x64, 0x65, 0x76, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x6d, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6d, 0x67, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6d, 0x67, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6d, 0x67, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x34, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0x32, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0x89, 0x02, 0x0a, 0x13,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x2e, 0x54,
	0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37,
	0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x51, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x53, 0x0a, 0x13, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x4a, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x11, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9a,
	0x03, 0x0a, 0x12, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x2e, 0x54, 0x61,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72,
	0x65, 0x61, 0x49, 0x44, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x61, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4f, 0x0a, 0x13, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x94, 0x01, 0x0a,
	0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x94, 0x01, 0x0a, 0x0c,
	0x52, 0x6f, 0x6f, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x22, 0x43, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x6d, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x29, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x16,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x22, 0x9f, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64,
	0x6d, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x22, 0x59, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0xb5, 0x02, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0a, 0x61,
	0x66, 0x66, 0x6f, 0x72, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x61,
	0x66, 0x66, 0x6f, 0x72, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x4b, 0x0a, 0x19, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x73, 0x6c, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x73, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x74, 0x73, 0x6c, 0x22, 0x37, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x73, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22,
	0x2c, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x54, 0x73, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x73, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x73, 0x6c, 0x22, 0x4c, 0x0a,
	0x12, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x12, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x13, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x22, 0x79, 0x0a, 0x13, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x22, 0xa3, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x40, 0x0a, 0x12, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6c, 0x65,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x32, 0xd6, 0x01, 0x0a, 0x0a,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x09, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x12, 0x10, 0x2e, 0x64, 0x6d, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x41, 0x75, 0x74, 0x68, 0x12, 0x11, 0x2e, 0x64, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x12, 0x10, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x64,
	0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x32, 0x95, 0x05, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x64, 0x6d, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x64, 0x6d,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0c, 0x2e, 0x64, 0x6d,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x10, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e,
	0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x15, 0x2e, 0x64, 0x6d, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x0e, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x49, 0x0a, 0x18, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e,
	0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x12,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x19, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x18, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x64, 0x6d,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x32, 0xdb, 0x06, 0x0a,
	0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x32,
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x64, 0x6d,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x16, 0x2e,
	0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e,
	0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x1a, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x19, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x64, 0x6d, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x73, 0x6c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x1d, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x54, 0x73, 0x6c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a,
	0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x73,
	0x6c, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1b, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x73, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x73, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x40, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x52, 0x65, 0x61, 0x64, 0x12, 0x18, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x11, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x12, 0x36, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x64, 0x6d, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x1a, 0x0c, 0x2e, 0x64,
	0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x84, 0x04, 0x0a, 0x0b, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x37, 0x0a, 0x0f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e,
	0x64, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x64,
	0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x14, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x64, 0x6d,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e,
	0x64, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x16,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x16, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xab, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x3d, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x1a, 0x19, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x13, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x75, 0x73, 0x68, 0x41,
	0x6c, 0x6c, 0x12, 0x1a, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x50, 0x75, 0x73, 0x68, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x14,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x12, 0x1b, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x42,
	0x07, 0x5a, 0x05, 0x70, 0x62, 0x2f, 0x64, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_dm_proto_rawDescOnce sync.Once
	file_proto_dm_proto_rawDescData = file_proto_dm_proto_rawDesc
)

func file_proto_dm_proto_rawDescGZIP() []byte {
	file_proto_dm_proto_rawDescOnce.Do(func() {
		file_proto_dm_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dm_proto_rawDescData)
	})
	return file_proto_dm_proto_rawDescData
}

var file_proto_dm_proto_msgTypes = make([]protoimpl.MessageInfo, 66)
var file_proto_dm_proto_goTypes = []interface{}{
	(*Response)(nil),                    // 0: dm.Response
	(*PageInfo)(nil),                    // 1: dm.PageInfo
	(*ProductRemoteConfig)(nil),         // 2: dm.ProductRemoteConfig
	(*RemoteConfigCreateReq)(nil),       // 3: dm.RemoteConfigCreateReq
	(*RemoteConfigIndexReq)(nil),        // 4: dm.RemoteConfigIndexReq
	(*RemoteConfigIndexResp)(nil),       // 5: dm.RemoteConfigIndexResp
	(*RemoteConfigPushAllReq)(nil),      // 6: dm.RemoteConfigPushAllReq
	(*RemoteConfigLastReadReq)(nil),     // 7: dm.RemoteConfigLastReadReq
	(*RemoteConfigLastReadResp)(nil),    // 8: dm.RemoteConfigLastReadResp
	(*ProductCustomReadReq)(nil),        // 9: dm.ProductCustomReadReq
	(*ProductCustom)(nil),               // 10: dm.ProductCustom
	(*DeviceGatewayBindDevice)(nil),     // 11: dm.DeviceGatewayBindDevice
	(*DeviceGatewaySign)(nil),           // 12: dm.DeviceGatewaySign
	(*DeviceGatewayMultiCreateReq)(nil), // 13: dm.DeviceGatewayMultiCreateReq
	(*DeviceGatewayIndexReq)(nil),       // 14: dm.DeviceGatewayIndexReq
	(*DeviceGatewayIndexResp)(nil),      // 15: dm.DeviceGatewayIndexResp
	(*DeviceGatewayMultiDeleteReq)(nil), // 16: dm.DeviceGatewayMultiDeleteReq
	(*GroupInfo)(nil),                   // 17: dm.GroupInfo
	(*GroupInfoCreateReq)(nil),          // 18: dm.GroupInfoCreateReq
	(*GroupInfoIndexReq)(nil),           // 19: dm.GroupInfoIndexReq
	(*GroupInfoIndexResp)(nil),          // 20: dm.GroupInfoIndexResp
	(*GroupInfoReadReq)(nil),            // 21: dm.GroupInfoReadReq
	(*GroupInfoUpdateReq)(nil),          // 22: dm.GroupInfoUpdateReq
	(*GroupInfoDeleteReq)(nil),          // 23: dm.GroupInfoDeleteReq
	(*GroupDeviceMultiCreateReq)(nil),   // 24: dm.GroupDeviceMultiCreateReq
	(*GroupDeviceIndexReq)(nil),         // 25: dm.GroupDeviceIndexReq
	(*GroupDeviceIndexResp)(nil),        // 26: dm.GroupDeviceIndexResp
	(*GroupDeviceMultiDeleteReq)(nil),   // 27: dm.GroupDeviceMultiDeleteReq
	(*Point)(nil),                       // 28: dm.Point
	(*DeviceInfo)(nil),                  // 29: dm.DeviceInfo
	(*ProductInfo)(nil),                 // 30: dm.ProductInfo
	(*ProductInfoDeleteReq)(nil),        // 31: dm.ProductInfoDeleteReq
	(*ProductInfoReadReq)(nil),          // 32: dm.ProductInfoReadReq
	(*ProductInfoIndexReq)(nil),         // 33: dm.ProductInfoIndexReq
	(*ProductInfoIndexResp)(nil),        // 34: dm.ProductInfoIndexResp
	(*DeviceInfoDeleteReq)(nil),         // 35: dm.DeviceInfoDeleteReq
	(*DeviceCore)(nil),                  // 36: dm.DeviceCore
	(*DeviceInfoReadReq)(nil),           // 37: dm.DeviceInfoReadReq
	(*DeviceInfoIndexReq)(nil),          // 38: dm.DeviceInfoIndexReq
	(*DeviceInfoIndexResp)(nil),         // 39: dm.DeviceInfoIndexResp
	(*LoginAuthReq)(nil),                // 40: dm.LoginAuthReq
	(*AccessAuthReq)(nil),               // 41: dm.AccessAuthReq
	(*RootCheckReq)(nil),                // 42: dm.RootCheckReq
	(*ProductSchemaUpdateReq)(nil),      // 43: dm.ProductSchemaUpdateReq
	(*ProductSchemaCreateReq)(nil),      // 44: dm.ProductSchemaCreateReq
	(*ProductSchemaDeleteReq)(nil),      // 45: dm.ProductSchemaDeleteReq
	(*ProductSchemaIndexReq)(nil),       // 46: dm.ProductSchemaIndexReq
	(*ProductSchemaIndexResp)(nil),      // 47: dm.ProductSchemaIndexResp
	(*ProductSchemaInfo)(nil),           // 48: dm.ProductSchemaInfo
	(*ProductSchemaTslImportReq)(nil),   // 49: dm.ProductSchemaTslImportReq
	(*ProductSchemaTslReadReq)(nil),     // 50: dm.ProductSchemaTslReadReq
	(*ProductSchemaTslReadResp)(nil),    // 51: dm.ProductSchemaTslReadResp
	(*DeviceInfoCountReq)(nil),          // 52: dm.DeviceInfoCountReq
	(*DeviceTypeCountReq)(nil),          // 53: dm.DeviceTypeCountReq
	(*DeviceInfoCountResp)(nil),         // 54: dm.DeviceInfoCountResp
	(*DeviceTypeCountResp)(nil),         // 55: dm.DeviceTypeCountResp
	(*DeviceRegisterReq)(nil),           // 56: dm.DeviceRegisterReq
	(*DeviceRegisterResp)(nil),          // 57: dm.DeviceRegisterResp
	(*PageInfo_OrderBy)(nil),            // 58: dm.PageInfo.OrderBy
	nil,                                 // 59: dm.GroupInfo.TagsEntry
	nil,                                 // 60: dm.GroupInfoIndexReq.TagsEntry
	nil,                                 // 61: dm.GroupInfoUpdateReq.TagsEntry
	nil,                                 // 62: dm.DeviceInfo.TagsEntry
	nil,                                 // 63: dm.ProductInfo.TagsEntry
	nil,                                 // 64: dm.ProductInfoIndexReq.TagsEntry
	nil,                                 // 65: dm.DeviceInfoIndexReq.TagsEntry
	(*wrappers.StringValue)(nil),        // 66: google.protobuf.StringValue
	(*wrappers.Int64Value)(nil),         // 67: google.protobuf.Int64Value
}
var file_proto_dm_proto_depIdxs = []int32{
	58, // 0: dm.PageInfo.orders:type_name -> dm.PageInfo.OrderBy
	1,  // 1: dm.RemoteConfigIndexReq.page:type_name -> dm.PageInfo
	2,  // 2: dm.RemoteConfigIndexResp.list:type_name -> dm.ProductRemoteConfig
	2,  // 3: dm.RemoteConfigLastReadResp.info:type_name -> dm.ProductRemoteConfig
	66, // 4: dm.ProductCustom.transformScript:type_name -> google.protobuf.StringValue
	12, // 5: dm.DeviceGatewayBindDevice.sign:type_name -> dm.DeviceGatewaySign
	11, // 6: dm.DeviceGatewayMultiCreateReq.list:type_name -> dm.DeviceGatewayBindDevice
	1,  // 7: dm.DeviceGatewayIndexReq.page:type_name -> dm.PageInfo
	36, // 8: dm.DeviceGatewayIndexReq.gateway:type_name -> dm.DeviceCore
	36, // 9: dm.DeviceGatewayIndexReq.subDevice:type_name -> dm.DeviceCore
	29, // 10: dm.DeviceGatewayIndexResp.list:type_name -> dm.DeviceInfo
	36, // 11: dm.DeviceGatewayMultiDeleteReq.list:type_name -> dm.DeviceCore
	59, // 12: dm.GroupInfo.tags:type_name -> dm.GroupInfo.TagsEntry
	1,  // 13: dm.GroupInfoIndexReq.page:type_name -> dm.PageInfo
	60, // 14: dm.GroupInfoIndexReq.tags:type_name -> dm.GroupInfoIndexReq.TagsEntry
	17, // 15: dm.GroupInfoIndexResp.list:type_name -> dm.GroupInfo
	17, // 16: dm.GroupInfoIndexResp.listAll:type_name -> dm.GroupInfo
	61, // 17: dm.GroupInfoUpdateReq.tags:type_name -> dm.GroupInfoUpdateReq.TagsEntry
	36, // 18: dm.GroupDeviceMultiCreateReq.list:type_name -> dm.DeviceCore
	1,  // 19: dm.GroupDeviceIndexReq.page:type_name -> dm.PageInfo
	29, // 20: dm.GroupDeviceIndexResp.list:type_name -> dm.DeviceInfo
	36, // 21: dm.GroupDeviceMultiDeleteReq.list:type_name -> dm.DeviceCore
	67, // 22: dm.DeviceInfo.projectID:type_name -> google.protobuf.Int64Value
	67, // 23: dm.DeviceInfo.areaID:type_name -> google.protobuf.Int64Value
	66, // 24: dm.DeviceInfo.version:type_name -> google.protobuf.StringValue
	28, // 25: dm.DeviceInfo.Position:type_name -> dm.Point
	66, // 26: dm.DeviceInfo.address:type_name -> google.protobuf.StringValue
	62, // 27: dm.DeviceInfo.tags:type_name -> dm.DeviceInfo.TagsEntry
	66, // 28: dm.DeviceInfo.deviceAlias:type_name -> google.protobuf.StringValue
	66, // 29: dm.DeviceInfo.phone:type_name -> google.protobuf.StringValue
	66, // 30: dm.DeviceInfo.iccid:type_name -> google.protobuf.StringValue
	66, // 31: dm.ProductInfo.desc:type_name -> google.protobuf.StringValue
	66, // 32: dm.ProductInfo.devStatus:type_name -> google.protobuf.StringValue
	63, // 33: dm.ProductInfo.tags:type_name -> dm.ProductInfo.TagsEntry
	1,  // 34: dm.ProductInfoIndexReq.page:type_name -> dm.PageInfo
	64, // 35: dm.ProductInfoIndexReq.tags:type_name -> dm.ProductInfoIndexReq.TagsEntry
	30, // 36: dm.ProductInfoIndexResp.list:type_name -> dm.ProductInfo
	1,  // 37: dm.DeviceInfoIndexReq.page:type_name -> dm.PageInfo
	65, // 38: dm.DeviceInfoIndexReq.tags:type_name -> dm.DeviceInfoIndexReq.TagsEntry
	28, // 39: dm.DeviceInfoIndexReq.Position:type_name -> dm.Point
	29, // 40: dm.DeviceInfoIndexResp.list:type_name -> dm.DeviceInfo
	48, // 41: dm.ProductSchemaUpdateReq.info:type_name -> dm.ProductSchemaInfo
	48, // 42: dm.ProductSchemaCreateReq.info:type_name -> dm.ProductSchemaInfo
	1,  // 43: dm.ProductSchemaIndexReq.page:type_name -> dm.PageInfo
	48, // 44: dm.ProductSchemaIndexResp.list:type_name -> dm.ProductSchemaInfo
	66, // 45: dm.ProductSchemaInfo.name:type_name -> google.protobuf.StringValue
	66, // 46: dm.ProductSchemaInfo.desc:type_name -> google.protobuf.StringValue
	66, // 47: dm.ProductSchemaInfo.affordance:type_name -> google.protobuf.StringValue
	40, // 48: dm.DeviceAuth.loginAuth:input_type -> dm.LoginAuthReq
	41, // 49: dm.DeviceAuth.accessAuth:input_type -> dm.AccessAuthReq
	42, // 50: dm.DeviceAuth.rootCheck:input_type -> dm.RootCheckReq
	56, // 51: dm.DeviceAuth.deviceRegister:input_type -> dm.DeviceRegisterReq
	29, // 52: dm.DeviceManage.deviceInfoCreate:input_type -> dm.DeviceInfo
	29, // 53: dm.DeviceManage.deviceInfoUpdate:input_type -> dm.DeviceInfo
	35, // 54: dm.DeviceManage.deviceInfoDelete:input_type -> dm.DeviceInfoDeleteReq
	38, // 55: dm.DeviceManage.deviceInfoIndex:input_type -> dm.DeviceInfoIndexReq
	37, // 56: dm.DeviceManage.deviceInfoRead:input_type -> dm.DeviceInfoReadReq
	13, // 57: dm.DeviceManage.deviceGatewayMultiCreate:input_type -> dm.DeviceGatewayMultiCreateReq
	14, // 58: dm.DeviceManage.deviceGatewayIndex:input_type -> dm.DeviceGatewayIndexReq
	16, // 59: dm.DeviceManage.deviceGatewayMultiDelete:input_type -> dm.DeviceGatewayMultiDeleteReq
	52, // 60: dm.DeviceManage.deviceInfoCount:input_type -> dm.DeviceInfoCountReq
	53, // 61: dm.DeviceManage.deviceTypeCount:input_type -> dm.DeviceTypeCountReq
	30, // 62: dm.ProductManage.productInfoCreate:input_type -> dm.ProductInfo
	30, // 63: dm.ProductManage.productInfoUpdate:input_type -> dm.ProductInfo
	31, // 64: dm.ProductManage.productInfoDelete:input_type -> dm.ProductInfoDeleteReq
	33, // 65: dm.ProductManage.productInfoIndex:input_type -> dm.ProductInfoIndexReq
	32, // 66: dm.ProductManage.productInfoRead:input_type -> dm.ProductInfoReadReq
	43, // 67: dm.ProductManage.productSchemaUpdate:input_type -> dm.ProductSchemaUpdateReq
	44, // 68: dm.ProductManage.productSchemaCreate:input_type -> dm.ProductSchemaCreateReq
	45, // 69: dm.ProductManage.productSchemaDelete:input_type -> dm.ProductSchemaDeleteReq
	46, // 70: dm.ProductManage.productSchemaIndex:input_type -> dm.ProductSchemaIndexReq
	49, // 71: dm.ProductManage.productSchemaTslImport:input_type -> dm.ProductSchemaTslImportReq
	50, // 72: dm.ProductManage.productSchemaTslRead:input_type -> dm.ProductSchemaTslReadReq
	9,  // 73: dm.ProductManage.productCustomRead:input_type -> dm.ProductCustomReadReq
	10, // 74: dm.ProductManage.productCustomUpdate:input_type -> dm.ProductCustom
	18, // 75: dm.DeviceGroup.groupInfoCreate:input_type -> dm.GroupInfoCreateReq
	19, // 76: dm.DeviceGroup.groupInfoIndex:input_type -> dm.GroupInfoIndexReq
	21, // 77: dm.DeviceGroup.groupInfoRead:input_type -> dm.GroupInfoReadReq
	22, // 78: dm.DeviceGroup.groupInfoUpdate:input_type -> dm.GroupInfoUpdateReq
	23, // 79: dm.DeviceGroup.groupInfoDelete:input_type -> dm.GroupInfoDeleteReq
	24, // 80: dm.DeviceGroup.groupDeviceMultiCreate:input_type -> dm.GroupDeviceMultiCreateReq
	25, // 81: dm.DeviceGroup.groupDeviceIndex:input_type -> dm.GroupDeviceIndexReq
	27, // 82: dm.DeviceGroup.groupDeviceMultiDelete:input_type -> dm.GroupDeviceMultiDeleteReq
	3,  // 83: dm.RemoteConfig.RemoteConfigCreate:input_type -> dm.RemoteConfigCreateReq
	4,  // 84: dm.RemoteConfig.RemoteConfigIndex:input_type -> dm.RemoteConfigIndexReq
	6,  // 85: dm.RemoteConfig.RemoteConfigPushAll:input_type -> dm.RemoteConfigPushAllReq
	7,  // 86: dm.RemoteConfig.RemoteConfigLastRead:input_type -> dm.RemoteConfigLastReadReq
	0,  // 87: dm.DeviceAuth.loginAuth:output_type -> dm.Response
	0,  // 88: dm.DeviceAuth.accessAuth:output_type -> dm.Response
	0,  // 89: dm.DeviceAuth.rootCheck:output_type -> dm.Response
	57, // 90: dm.DeviceAuth.deviceRegister:output_type -> dm.DeviceRegisterResp
	0,  // 91: dm.DeviceManage.deviceInfoCreate:output_type -> dm.Response
	0,  // 92: dm.DeviceManage.deviceInfoUpdate:output_type -> dm.Response
	0,  // 93: dm.DeviceManage.deviceInfoDelete:output_type -> dm.Response
	39, // 94: dm.DeviceManage.deviceInfoIndex:output_type -> dm.DeviceInfoIndexResp
	29, // 95: dm.DeviceManage.deviceInfoRead:output_type -> dm.DeviceInfo
	0,  // 96: dm.DeviceManage.deviceGatewayMultiCreate:output_type -> dm.Response
	15, // 97: dm.DeviceManage.deviceGatewayIndex:output_type -> dm.DeviceGatewayIndexResp
	0,  // 98: dm.DeviceManage.deviceGatewayMultiDelete:output_type -> dm.Response
	54, // 99: dm.DeviceManage.deviceInfoCount:output_type -> dm.DeviceInfoCountResp
	55, // 100: dm.DeviceManage.deviceTypeCount:output_type -> dm.DeviceTypeCountResp
	0,  // 101: dm.ProductManage.productInfoCreate:output_type -> dm.Response
	0,  // 102: dm.ProductManage.productInfoUpdate:output_type -> dm.Response
	0,  // 103: dm.ProductManage.productInfoDelete:output_type -> dm.Response
	34, // 104: dm.ProductManage.productInfoIndex:output_type -> dm.ProductInfoIndexResp
	30, // 105: dm.ProductManage.productInfoRead:output_type -> dm.ProductInfo
	0,  // 106: dm.ProductManage.productSchemaUpdate:output_type -> dm.Response
	0,  // 107: dm.ProductManage.productSchemaCreate:output_type -> dm.Response
	0,  // 108: dm.ProductManage.productSchemaDelete:output_type -> dm.Response
	47, // 109: dm.ProductManage.productSchemaIndex:output_type -> dm.ProductSchemaIndexResp
	0,  // 110: dm.ProductManage.productSchemaTslImport:output_type -> dm.Response
	51, // 111: dm.ProductManage.productSchemaTslRead:output_type -> dm.ProductSchemaTslReadResp
	10, // 112: dm.ProductManage.productCustomRead:output_type -> dm.ProductCustom
	0,  // 113: dm.ProductManage.productCustomUpdate:output_type -> dm.Response
	0,  // 114: dm.DeviceGroup.groupInfoCreate:output_type -> dm.Response
	20, // 115: dm.DeviceGroup.groupInfoIndex:output_type -> dm.GroupInfoIndexResp
	17, // 116: dm.DeviceGroup.groupInfoRead:output_type -> dm.GroupInfo
	0,  // 117: dm.DeviceGroup.groupInfoUpdate:output_type -> dm.Response
	0,  // 118: dm.DeviceGroup.groupInfoDelete:output_type -> dm.Response
	0,  // 119: dm.DeviceGroup.groupDeviceMultiCreate:output_type -> dm.Response
	26, // 120: dm.DeviceGroup.groupDeviceIndex:output_type -> dm.GroupDeviceIndexResp
	0,  // 121: dm.DeviceGroup.groupDeviceMultiDelete:output_type -> dm.Response
	0,  // 122: dm.RemoteConfig.RemoteConfigCreate:output_type -> dm.Response
	5,  // 123: dm.RemoteConfig.RemoteConfigIndex:output_type -> dm.RemoteConfigIndexResp
	0,  // 124: dm.RemoteConfig.RemoteConfigPushAll:output_type -> dm.Response
	8,  // 125: dm.RemoteConfig.RemoteConfigLastRead:output_type -> dm.RemoteConfigLastReadResp
	87, // [87:126] is the sub-list for method output_type
	48, // [48:87] is the sub-list for method input_type
	48, // [48:48] is the sub-list for extension type_name
	48, // [48:48] is the sub-list for extension extendee
	0,  // [0:48] is the sub-list for field type_name
}

func init() { file_proto_dm_proto_init() }
func file_proto_dm_proto_init() {
	if File_proto_dm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_dm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductRemoteConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteConfigCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteConfigIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteConfigIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteConfigPushAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteConfigLastReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteConfigLastReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCustomReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCustom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceGatewayBindDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceGatewaySign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceGatewayMultiCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceGatewayIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceGatewayIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceGatewayMultiDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupDeviceMultiCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupDeviceIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupDeviceIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupDeviceMultiDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfoDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfoReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceCore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RootCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSchemaUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSchemaCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSchemaDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSchemaIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSchemaIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSchemaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSchemaTslImportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSchemaTslReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSchemaTslReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceTypeCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceTypeCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceRegisterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo_OrderBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   66,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_proto_dm_proto_goTypes,
		DependencyIndexes: file_proto_dm_proto_depIdxs,
		MessageInfos:      file_proto_dm_proto_msgTypes,
	}.Build()
	File_proto_dm_proto = out.File
	file_proto_dm_proto_rawDesc = nil
	file_proto_dm_proto_goTypes = nil
	file_proto_dm_proto_depIdxs = nil
}
