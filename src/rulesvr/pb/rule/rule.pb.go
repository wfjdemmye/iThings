// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: proto/rule.proto

package rule

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WithID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *WithID) Reset() {
	*x = WithID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithID) ProtoMessage() {}

func (x *WithID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithID.ProtoReflect.Descriptor instead.
func (*WithID) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{0}
}

func (x *WithID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{1}
}

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{2}
}

func (x *PageInfo) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type TimeRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   int64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{3}
}

func (x *TimeRange) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *TimeRange) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type AlarmRecordIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmID   int64      `protobuf:"varint,1,opt,name=alarmID,proto3" json:"alarmID,omitempty"`    //告警配置ID
	Page      *PageInfo  `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`           // 分页信息 获取全部不填
	TimeRange *TimeRange `protobuf:"bytes,3,opt,name=timeRange,proto3" json:"timeRange,omitempty"` // 时间范围
}

func (x *AlarmRecordIndexReq) Reset() {
	*x = AlarmRecordIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmRecordIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmRecordIndexReq) ProtoMessage() {}

func (x *AlarmRecordIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmRecordIndexReq.ProtoReflect.Descriptor instead.
func (*AlarmRecordIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{4}
}

func (x *AlarmRecordIndexReq) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

func (x *AlarmRecordIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AlarmRecordIndexReq) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

type AlarmRecordIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*AlarmRecord `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *AlarmRecordIndexResp) Reset() {
	*x = AlarmRecordIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmRecordIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmRecordIndexResp) ProtoMessage() {}

func (x *AlarmRecordIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmRecordIndexResp.ProtoReflect.Descriptor instead.
func (*AlarmRecordIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{5}
}

func (x *AlarmRecordIndexResp) GetList() []*AlarmRecord {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AlarmRecordIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AlarmRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                    //编号
	AlarmID     int64  `protobuf:"varint,2,opt,name=alarmID,proto3" json:"alarmID,omitempty"`          //告警记录ID
	TriggerType int64  `protobuf:"varint,3,opt,name=triggerType,proto3" json:"triggerType,omitempty"`  //触发类型(设备触发1,其他2)
	ProductID   string `protobuf:"bytes,4,opt,name=productID,proto3" json:"productID,omitempty"`       //触发产品id
	DeviceName  string `protobuf:"bytes,5,opt,name=deviceName,proto3" json:"deviceName,omitempty"`     //触发设备名称
	SceneName   string `protobuf:"bytes,6,opt,name=sceneName,proto3" json:"sceneName,omitempty"`       //场景名称
	SceneID     int64  `protobuf:"varint,7,opt,name=sceneID,proto3" json:"sceneID,omitempty"`          //场景ID
	Level       int64  `protobuf:"varint,8,opt,name=level,proto3" json:"level,omitempty"`              //告警配置级别（1提醒 2一般 3严重 4紧急 5超紧急）
	LastAlarm   int64  `protobuf:"varint,9,opt,name=lastAlarm,proto3" json:"lastAlarm,omitempty"`      //最新告警时间
	CreatedTime int64  `protobuf:"varint,10,opt,name=createdTime,proto3" json:"createdTime,omitempty"` //创建时间
	DealState   int64  `protobuf:"varint,11,opt,name=dealState,proto3" json:"dealState,omitempty"`     //告警记录状态（1无告警 2告警中 3已处理）
}

func (x *AlarmRecord) Reset() {
	*x = AlarmRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmRecord) ProtoMessage() {}

func (x *AlarmRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmRecord.ProtoReflect.Descriptor instead.
func (*AlarmRecord) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{6}
}

func (x *AlarmRecord) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlarmRecord) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

func (x *AlarmRecord) GetTriggerType() int64 {
	if x != nil {
		return x.TriggerType
	}
	return 0
}

func (x *AlarmRecord) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *AlarmRecord) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *AlarmRecord) GetSceneName() string {
	if x != nil {
		return x.SceneName
	}
	return ""
}

func (x *AlarmRecord) GetSceneID() int64 {
	if x != nil {
		return x.SceneID
	}
	return 0
}

func (x *AlarmRecord) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AlarmRecord) GetLastAlarm() int64 {
	if x != nil {
		return x.LastAlarm
	}
	return 0
}

func (x *AlarmRecord) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *AlarmRecord) GetDealState() int64 {
	if x != nil {
		return x.DealState
	}
	return 0
}

type AlarmRelieveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneID   int64  `protobuf:"varint,7,opt,name=sceneID,proto3" json:"sceneID,omitempty"`    //场景ID
	SceneName string `protobuf:"bytes,6,opt,name=sceneName,proto3" json:"sceneName,omitempty"` //场景名称
}

func (x *AlarmRelieveReq) Reset() {
	*x = AlarmRelieveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmRelieveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmRelieveReq) ProtoMessage() {}

func (x *AlarmRelieveReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmRelieveReq.ProtoReflect.Descriptor instead.
func (*AlarmRelieveReq) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{7}
}

func (x *AlarmRelieveReq) GetSceneID() int64 {
	if x != nil {
		return x.SceneID
	}
	return 0
}

func (x *AlarmRelieveReq) GetSceneName() string {
	if x != nil {
		return x.SceneName
	}
	return ""
}

type AlarmTriggerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneID     int64  `protobuf:"varint,7,opt,name=sceneID,proto3" json:"sceneID,omitempty"`         //场景ID
	SceneName   string `protobuf:"bytes,6,opt,name=sceneName,proto3" json:"sceneName,omitempty"`      //场景名称
	TriggerType int64  `protobuf:"varint,2,opt,name=triggerType,proto3" json:"triggerType,omitempty"` //触发类型(设备触发1,其他2)
	ProductID   string `protobuf:"bytes,3,opt,name=productID,proto3" json:"productID,omitempty"`      //触发产品id
	DeviceName  string `protobuf:"bytes,4,opt,name=deviceName,proto3" json:"deviceName,omitempty"`    //触发设备名称
	Serial      string `protobuf:"bytes,5,opt,name=serial,proto3" json:"serial,omitempty"`            //告警流水
	Desc        string `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`                //告警说明
}

func (x *AlarmTriggerReq) Reset() {
	*x = AlarmTriggerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmTriggerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmTriggerReq) ProtoMessage() {}

func (x *AlarmTriggerReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmTriggerReq.ProtoReflect.Descriptor instead.
func (*AlarmTriggerReq) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{8}
}

func (x *AlarmTriggerReq) GetSceneID() int64 {
	if x != nil {
		return x.SceneID
	}
	return 0
}

func (x *AlarmTriggerReq) GetSceneName() string {
	if x != nil {
		return x.SceneName
	}
	return ""
}

func (x *AlarmTriggerReq) GetTriggerType() int64 {
	if x != nil {
		return x.TriggerType
	}
	return 0
}

func (x *AlarmTriggerReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *AlarmTriggerReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *AlarmTriggerReq) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *AlarmTriggerReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type AlarmSceneIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmID int64     `protobuf:"varint,1,opt,name=alarmID,proto3" json:"alarmID,omitempty"` //告警配置ID
	Page    *PageInfo `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`        // 分页信息 获取全部不填
}

func (x *AlarmSceneIndexReq) Reset() {
	*x = AlarmSceneIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmSceneIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmSceneIndexReq) ProtoMessage() {}

func (x *AlarmSceneIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmSceneIndexReq.ProtoReflect.Descriptor instead.
func (*AlarmSceneIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{9}
}

func (x *AlarmSceneIndexReq) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

func (x *AlarmSceneIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

type AlarmSceneIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*SceneInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *AlarmSceneIndexResp) Reset() {
	*x = AlarmSceneIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmSceneIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmSceneIndexResp) ProtoMessage() {}

func (x *AlarmSceneIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmSceneIndexResp.ProtoReflect.Descriptor instead.
func (*AlarmSceneIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{10}
}

func (x *AlarmSceneIndexResp) GetList() []*SceneInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AlarmSceneIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AlarmSceneDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmID int64 `protobuf:"varint,1,opt,name=alarmID,proto3" json:"alarmID,omitempty"` //告警配置ID
	SceneID int64 `protobuf:"varint,2,opt,name=sceneID,proto3" json:"sceneID,omitempty"` //场景id
}

func (x *AlarmSceneDeleteReq) Reset() {
	*x = AlarmSceneDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmSceneDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmSceneDeleteReq) ProtoMessage() {}

func (x *AlarmSceneDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmSceneDeleteReq.ProtoReflect.Descriptor instead.
func (*AlarmSceneDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{11}
}

func (x *AlarmSceneDeleteReq) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

func (x *AlarmSceneDeleteReq) GetSceneID() int64 {
	if x != nil {
		return x.SceneID
	}
	return 0
}

type AlarmSceneMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmID  int64   `protobuf:"varint,1,opt,name=alarmID,proto3" json:"alarmID,omitempty"`          //告警配置ID
	SceneIDs []int64 `protobuf:"varint,2,rep,packed,name=sceneIDs,proto3" json:"sceneIDs,omitempty"` //场景id
}

func (x *AlarmSceneMultiUpdateReq) Reset() {
	*x = AlarmSceneMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmSceneMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmSceneMultiUpdateReq) ProtoMessage() {}

func (x *AlarmSceneMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmSceneMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*AlarmSceneMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{12}
}

func (x *AlarmSceneMultiUpdateReq) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

func (x *AlarmSceneMultiUpdateReq) GetSceneIDs() []int64 {
	if x != nil {
		return x.SceneIDs
	}
	return nil
}

type AlarmDealRecordCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmRecordID int64  `protobuf:"varint,1,opt,name=alarmRecordID,proto3" json:"alarmRecordID,omitempty"` //告警配置ID
	Result        string `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`                //告警处理结果
	Type          int64  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`                   //告警处理类型（1人工 2系统）
}

func (x *AlarmDealRecordCreateReq) Reset() {
	*x = AlarmDealRecordCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmDealRecordCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmDealRecordCreateReq) ProtoMessage() {}

func (x *AlarmDealRecordCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmDealRecordCreateReq.ProtoReflect.Descriptor instead.
func (*AlarmDealRecordCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{13}
}

func (x *AlarmDealRecordCreateReq) GetAlarmRecordID() int64 {
	if x != nil {
		return x.AlarmRecordID
	}
	return 0
}

func (x *AlarmDealRecordCreateReq) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *AlarmDealRecordCreateReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type AlarmDeal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                       //编号
	AlarmRecordID int64  `protobuf:"varint,2,opt,name=alarmRecordID,proto3" json:"alarmRecordID,omitempty"` //告警配置ID
	Result        string `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`                //告警处理结果
	Type          int64  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`                   //告警处理类型（1人工 2其它）
	AlarmTime     int64  `protobuf:"varint,5,opt,name=alarmTime,proto3" json:"alarmTime,omitempty"`         //最早告警时间
	CreatedTime   int64  `protobuf:"varint,6,opt,name=createdTime,proto3" json:"createdTime,omitempty"`     //告警处理时间
}

func (x *AlarmDeal) Reset() {
	*x = AlarmDeal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmDeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmDeal) ProtoMessage() {}

func (x *AlarmDeal) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmDeal.ProtoReflect.Descriptor instead.
func (*AlarmDeal) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{14}
}

func (x *AlarmDeal) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlarmDeal) GetAlarmRecordID() int64 {
	if x != nil {
		return x.AlarmRecordID
	}
	return 0
}

func (x *AlarmDeal) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *AlarmDeal) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AlarmDeal) GetAlarmTime() int64 {
	if x != nil {
		return x.AlarmTime
	}
	return 0
}

func (x *AlarmDeal) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

type AlarmDealRecordIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmRecordID int64      `protobuf:"varint,1,opt,name=alarmRecordID,proto3" json:"alarmRecordID,omitempty"` //告警配置ID
	Page          *PageInfo  `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`                    // 分页信息 只获取一个则不填
	TimeRange     *TimeRange `protobuf:"bytes,3,opt,name=timeRange,proto3" json:"timeRange,omitempty"`          // 时间范围
}

func (x *AlarmDealRecordIndexReq) Reset() {
	*x = AlarmDealRecordIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmDealRecordIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmDealRecordIndexReq) ProtoMessage() {}

func (x *AlarmDealRecordIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmDealRecordIndexReq.ProtoReflect.Descriptor instead.
func (*AlarmDealRecordIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{15}
}

func (x *AlarmDealRecordIndexReq) GetAlarmRecordID() int64 {
	if x != nil {
		return x.AlarmRecordID
	}
	return 0
}

func (x *AlarmDealRecordIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AlarmDealRecordIndexReq) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

type AlarmDealRecordIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*AlarmDeal `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //告警日志
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *AlarmDealRecordIndexResp) Reset() {
	*x = AlarmDealRecordIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmDealRecordIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmDealRecordIndexResp) ProtoMessage() {}

func (x *AlarmDealRecordIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmDealRecordIndexResp.ProtoReflect.Descriptor instead.
func (*AlarmDealRecordIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{16}
}

func (x *AlarmDealRecordIndexResp) GetList() []*AlarmDeal {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AlarmDealRecordIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AlarmLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                       //编号
	AlarmRecordID int64  `protobuf:"varint,2,opt,name=alarmRecordID,proto3" json:"alarmRecordID,omitempty"` //告警记录ID
	Serial        string `protobuf:"bytes,3,opt,name=serial,proto3" json:"serial,omitempty"`                //告警流水
	SceneName     string `protobuf:"bytes,4,opt,name=sceneName,proto3" json:"sceneName,omitempty"`          //场景名称
	SceneID       int64  `protobuf:"varint,5,opt,name=sceneID,proto3" json:"sceneID,omitempty"`             //场景ID
	Desc          string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`                    //告警说明
	CreatedTime   int64  `protobuf:"varint,7,opt,name=createdTime,proto3" json:"createdTime,omitempty"`     //告警时间
}

func (x *AlarmLog) Reset() {
	*x = AlarmLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmLog) ProtoMessage() {}

func (x *AlarmLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmLog.ProtoReflect.Descriptor instead.
func (*AlarmLog) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{17}
}

func (x *AlarmLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlarmLog) GetAlarmRecordID() int64 {
	if x != nil {
		return x.AlarmRecordID
	}
	return 0
}

func (x *AlarmLog) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *AlarmLog) GetSceneName() string {
	if x != nil {
		return x.SceneName
	}
	return ""
}

func (x *AlarmLog) GetSceneID() int64 {
	if x != nil {
		return x.SceneID
	}
	return 0
}

func (x *AlarmLog) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AlarmLog) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

type AlarmLogIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmRecordID int64      `protobuf:"varint,1,opt,name=alarmRecordID,proto3" json:"alarmRecordID,omitempty"` //告警记录ID
	TimeRange     *TimeRange `protobuf:"bytes,2,opt,name=timeRange,proto3" json:"timeRange,omitempty"`          // 时间范围
	Page          *PageInfo  `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`                    // 分页信息 只获取一个则不填
}

func (x *AlarmLogIndexReq) Reset() {
	*x = AlarmLogIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmLogIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmLogIndexReq) ProtoMessage() {}

func (x *AlarmLogIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmLogIndexReq.ProtoReflect.Descriptor instead.
func (*AlarmLogIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{18}
}

func (x *AlarmLogIndexReq) GetAlarmRecordID() int64 {
	if x != nil {
		return x.AlarmRecordID
	}
	return 0
}

func (x *AlarmLogIndexReq) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *AlarmLogIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

type AlarmLogIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*AlarmLog `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //告警日志
	Total int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *AlarmLogIndexResp) Reset() {
	*x = AlarmLogIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmLogIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmLogIndexResp) ProtoMessage() {}

func (x *AlarmLogIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmLogIndexResp.ProtoReflect.Descriptor instead.
func (*AlarmLogIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{19}
}

func (x *AlarmLogIndexResp) GetList() []*AlarmLog {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AlarmLogIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AlarmInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                   //编号
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                //告警配置名称
	Desc        string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`                //告警配置说明
	Level       int64  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`             //告警配置级别（1提醒 2一般 3严重 4紧急 5超紧急）
	Status      int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`           //告警配置状态（1启用 2禁用）
	CreatedTime int64  `protobuf:"varint,6,opt,name=createdTime,proto3" json:"createdTime,omitempty"` //创建时间
}

func (x *AlarmInfo) Reset() {
	*x = AlarmInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmInfo) ProtoMessage() {}

func (x *AlarmInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmInfo.ProtoReflect.Descriptor instead.
func (*AlarmInfo) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{20}
}

func (x *AlarmInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlarmInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlarmInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AlarmInfo) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AlarmInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AlarmInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

type AlarmInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                 // 分页信息 只获取一个则不填
	Name     string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                 //告警配置名称 模糊查询
	SceneID  int64     `protobuf:"varint,3,opt,name=sceneID,proto3" json:"sceneID,omitempty"`          //场景ID过滤
	AlarmIDs []int64   `protobuf:"varint,4,rep,packed,name=alarmIDs,proto3" json:"alarmIDs,omitempty"` //告警id列表
}

func (x *AlarmInfoIndexReq) Reset() {
	*x = AlarmInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmInfoIndexReq) ProtoMessage() {}

func (x *AlarmInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmInfoIndexReq.ProtoReflect.Descriptor instead.
func (*AlarmInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{21}
}

func (x *AlarmInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AlarmInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlarmInfoIndexReq) GetSceneID() int64 {
	if x != nil {
		return x.SceneID
	}
	return 0
}

func (x *AlarmInfoIndexReq) GetAlarmIDs() []int64 {
	if x != nil {
		return x.AlarmIDs
	}
	return nil
}

type AlarmInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*AlarmInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //告警信息
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *AlarmInfoIndexResp) Reset() {
	*x = AlarmInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmInfoIndexResp) ProtoMessage() {}

func (x *AlarmInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmInfoIndexResp.ProtoReflect.Descriptor instead.
func (*AlarmInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{22}
}

func (x *AlarmInfoIndexResp) GetList() []*AlarmInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AlarmInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SceneInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`               //分页信息 只获取一个则不填
	Name        string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`               //场景名 模糊查询
	Status      int64     `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`          //状态: 1启用 2禁用
	TriggerType string    `protobuf:"bytes,4,opt,name=triggerType,proto3" json:"triggerType,omitempty"` //触发类型 device: 设备触发 timer: 定时触发 manual:手动触发
	AlarmID     int64     `protobuf:"varint,5,opt,name=alarmID,proto3" json:"alarmID,omitempty"`        //告警配置ID过滤
}

func (x *SceneInfoIndexReq) Reset() {
	*x = SceneInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneInfoIndexReq) ProtoMessage() {}

func (x *SceneInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneInfoIndexReq.ProtoReflect.Descriptor instead.
func (*SceneInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{23}
}

func (x *SceneInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *SceneInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SceneInfoIndexReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SceneInfoIndexReq) GetTriggerType() string {
	if x != nil {
		return x.TriggerType
	}
	return ""
}

func (x *SceneInfoIndexReq) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

type SceneInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*SceneInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //设备信息
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *SceneInfoIndexResp) Reset() {
	*x = SceneInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneInfoIndexResp) ProtoMessage() {}

func (x *SceneInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneInfoIndexResp.ProtoReflect.Descriptor instead.
func (*SceneInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{24}
}

func (x *SceneInfoIndexResp) GetList() []*SceneInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SceneInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SceneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                   //场景id
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                //场景名
	Status      int64  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`           //状态: 1启用 2禁用
	Desc        string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`                //描述
	CreatedTime int64  `protobuf:"varint,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"` //创建时间 秒级时间戳 只读
	TriggerType string `protobuf:"bytes,6,opt,name=triggerType,proto3" json:"triggerType,omitempty"`  //触发类型 device: 设备触发 timer: 定时触发 manual:手动触发
	Trigger     string `protobuf:"bytes,7,opt,name=trigger,proto3" json:"trigger,omitempty"`          //触发器
	When        string `protobuf:"bytes,8,opt,name=when,proto3" json:"when,omitempty"`                //触发条件
	Then        string `protobuf:"bytes,9,opt,name=then,proto3" json:"then,omitempty"`                //满足条件时执行的动作
}

func (x *SceneInfo) Reset() {
	*x = SceneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneInfo) ProtoMessage() {}

func (x *SceneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneInfo.ProtoReflect.Descriptor instead.
func (*SceneInfo) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{25}
}

func (x *SceneInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SceneInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SceneInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SceneInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SceneInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *SceneInfo) GetTriggerType() string {
	if x != nil {
		return x.TriggerType
	}
	return ""
}

func (x *SceneInfo) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

func (x *SceneInfo) GetWhen() string {
	if x != nil {
		return x.When
	}
	return ""
}

func (x *SceneInfo) GetThen() string {
	if x != nil {
		return x.Then
	}
	return ""
}

type FlowInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息 只获取一个则不填
}

func (x *FlowInfoIndexReq) Reset() {
	*x = FlowInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowInfoIndexReq) ProtoMessage() {}

func (x *FlowInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowInfoIndexReq.ProtoReflect.Descriptor instead.
func (*FlowInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{26}
}

func (x *FlowInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

type FlowInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*FlowInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //设备信息
	Total int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *FlowInfoIndexResp) Reset() {
	*x = FlowInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowInfoIndexResp) ProtoMessage() {}

func (x *FlowInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowInfoIndexResp.ProtoReflect.Descriptor instead.
func (*FlowInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{27}
}

func (x *FlowInfoIndexResp) GetList() []*FlowInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FlowInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type FlowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                //流的名称
	IsDisabled  int64  `protobuf:"varint,3,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`   //是否禁用 1:是 2:否
	Desc        string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`                //描述
	CreatedTime int64  `protobuf:"varint,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"` //创建时间 秒级时间戳 只读
}

func (x *FlowInfo) Reset() {
	*x = FlowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rule_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowInfo) ProtoMessage() {}

func (x *FlowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rule_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowInfo.ProtoReflect.Descriptor instead.
func (*FlowInfo) Descriptor() ([]byte, []int) {
	return file_proto_rule_proto_rawDescGZIP(), []int{28}
}

func (x *FlowInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FlowInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FlowInfo) GetIsDisabled() int64 {
	if x != nil {
		return x.IsDisabled
	}
	return 0
}

func (x *FlowInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *FlowInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

var File_proto_rule_proto protoreflect.FileDescriptor

var file_proto_rule_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x18, 0x0a, 0x06, 0x57, 0x69, 0x74, 0x68,
	0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x32, 0x0a, 0x08, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0x33, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x65, 0x6e, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x72, 0x75, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x53, 0x0a, 0x14, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xc3,
	0x02, 0x0a, 0x0b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49,
	0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x49, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x6c,
	0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xd5, 0x01, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x52, 0x0a, 0x12, 0x61, 0x6c, 0x61, 0x72, 0x6d,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x50, 0x0a, 0x13, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x49, 0x0a,
	0x13, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x18, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x73, 0x22, 0x6c, 0x0a, 0x18, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x09, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x44, 0x65, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x17, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x2d,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x55, 0x0a,
	0x18, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0xc6, 0x01, 0x0a, 0x08, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8b, 0x01,
	0x0a, 0x10, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x6c, 0x61, 0x72, 0x6d,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x11, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x93, 0x01, 0x0a, 0x09, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x81, 0x01, 0x0a, 0x11, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x49, 0x44, 0x73, 0x22, 0x4f, 0x0a, 0x12, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9f, 0x01, 0x0a, 0x11, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x75, 0x6c, 0x65,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x22, 0x4f, 0x0a, 0x12, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xe1, 0x01, 0x0a, 0x09, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x68, 0x65, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x68, 0x65, 0x6e, 0x22, 0x36, 0x0a, 0x10,
	0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x11, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x46,
	0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x84, 0x01, 0x0a, 0x08, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x88, 0x02, 0x0a, 0x0a, 0x52,
	0x75, 0x6c, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x2e, 0x0a, 0x0e, 0x66, 0x6c, 0x6f,
	0x77, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0c, 0x2e, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x0e, 0x66, 0x6c, 0x6f,
	0x77, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x0e, 0x66, 0x6c, 0x6f, 0x77,
	0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x72, 0x75, 0x6c,
	0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0b, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x46, 0x6c,
	0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0c, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0e, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x46, 0x6c, 0x6f,
	0x77, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xc7, 0x02, 0x0a, 0x0c, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x0f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x72, 0x75, 0x6c, 0x65,
	0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0c, 0x2e, 0x72, 0x75, 0x6c,
	0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x0f, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x72,
	0x75, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x0f, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x72,
	0x75, 0x6c, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0b, 0x2e, 0x72, 0x75, 0x6c,
	0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x0e, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x2e, 0x72, 0x75, 0x6c, 0x65,
	0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x1a, 0x18, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0d,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0c, 0x2e,
	0x72, 0x75, 0x6c, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0f, 0x2e, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x14,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x12, 0x0c, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68,
	0x49, 0x44, 0x1a, 0x0b, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32,
	0xaa, 0x06, 0x0a, 0x0b, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x30, 0x0a, 0x0f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x0f, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x0c, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x44, 0x12, 0x2f, 0x0a, 0x0f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x2c, 0x0a, 0x0f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x49, 0x44, 0x1a, 0x0b, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x43, 0x0a, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x17, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0d, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0c, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x44, 0x1a, 0x0f, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x15, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0b,
	0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3a, 0x0a, 0x10, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x19, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x72, 0x75, 0x6c,
	0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x10, 0x61, 0x6c, 0x61, 0x72, 0x6d,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x2e, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x33, 0x0a, 0x0c, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x12, 0x15, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x72, 0x75, 0x6c, 0x65,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x0c, 0x61, 0x6c, 0x61, 0x72, 0x6d,
	0x52, 0x65, 0x6c, 0x69, 0x65, 0x76, 0x65, 0x12, 0x15, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x6c, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x0d,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x2e,
	0x72, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45,
	0x0a, 0x15, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x55, 0x0a, 0x14, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x65,
	0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x2e,
	0x72, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x72,
	0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0b, 0x5a, 0x09,
	0x2e, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_rule_proto_rawDescOnce sync.Once
	file_proto_rule_proto_rawDescData = file_proto_rule_proto_rawDesc
)

func file_proto_rule_proto_rawDescGZIP() []byte {
	file_proto_rule_proto_rawDescOnce.Do(func() {
		file_proto_rule_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_rule_proto_rawDescData)
	})
	return file_proto_rule_proto_rawDescData
}

var file_proto_rule_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_proto_rule_proto_goTypes = []interface{}{
	(*WithID)(nil),                   // 0: rule.WithID
	(*Empty)(nil),                    // 1: rule.Empty
	(*PageInfo)(nil),                 // 2: rule.PageInfo
	(*TimeRange)(nil),                // 3: rule.TimeRange
	(*AlarmRecordIndexReq)(nil),      // 4: rule.AlarmRecordIndexReq
	(*AlarmRecordIndexResp)(nil),     // 5: rule.AlarmRecordIndexResp
	(*AlarmRecord)(nil),              // 6: rule.AlarmRecord
	(*AlarmRelieveReq)(nil),          // 7: rule.AlarmRelieveReq
	(*AlarmTriggerReq)(nil),          // 8: rule.AlarmTriggerReq
	(*AlarmSceneIndexReq)(nil),       // 9: rule.alarmSceneIndexReq
	(*AlarmSceneIndexResp)(nil),      // 10: rule.alarmSceneIndexResp
	(*AlarmSceneDeleteReq)(nil),      // 11: rule.alarmSceneDeleteReq
	(*AlarmSceneMultiUpdateReq)(nil), // 12: rule.alarmSceneMultiUpdateReq
	(*AlarmDealRecordCreateReq)(nil), // 13: rule.alarmDealRecordCreateReq
	(*AlarmDeal)(nil),                // 14: rule.AlarmDeal
	(*AlarmDealRecordIndexReq)(nil),  // 15: rule.AlarmDealRecordIndexReq
	(*AlarmDealRecordIndexResp)(nil), // 16: rule.AlarmDealRecordIndexResp
	(*AlarmLog)(nil),                 // 17: rule.AlarmLog
	(*AlarmLogIndexReq)(nil),         // 18: rule.AlarmLogIndexReq
	(*AlarmLogIndexResp)(nil),        // 19: rule.AlarmLogIndexResp
	(*AlarmInfo)(nil),                // 20: rule.AlarmInfo
	(*AlarmInfoIndexReq)(nil),        // 21: rule.AlarmInfoIndexReq
	(*AlarmInfoIndexResp)(nil),       // 22: rule.AlarmInfoIndexResp
	(*SceneInfoIndexReq)(nil),        // 23: rule.SceneInfoIndexReq
	(*SceneInfoIndexResp)(nil),       // 24: rule.SceneInfoIndexResp
	(*SceneInfo)(nil),                // 25: rule.SceneInfo
	(*FlowInfoIndexReq)(nil),         // 26: rule.FlowInfoIndexReq
	(*FlowInfoIndexResp)(nil),        // 27: rule.FlowInfoIndexResp
	(*FlowInfo)(nil),                 // 28: rule.FlowInfo
}
var file_proto_rule_proto_depIdxs = []int32{
	2,  // 0: rule.AlarmRecordIndexReq.page:type_name -> rule.PageInfo
	3,  // 1: rule.AlarmRecordIndexReq.timeRange:type_name -> rule.TimeRange
	6,  // 2: rule.AlarmRecordIndexResp.list:type_name -> rule.AlarmRecord
	2,  // 3: rule.alarmSceneIndexReq.page:type_name -> rule.PageInfo
	25, // 4: rule.alarmSceneIndexResp.list:type_name -> rule.SceneInfo
	2,  // 5: rule.AlarmDealRecordIndexReq.page:type_name -> rule.PageInfo
	3,  // 6: rule.AlarmDealRecordIndexReq.timeRange:type_name -> rule.TimeRange
	14, // 7: rule.AlarmDealRecordIndexResp.list:type_name -> rule.AlarmDeal
	3,  // 8: rule.AlarmLogIndexReq.timeRange:type_name -> rule.TimeRange
	2,  // 9: rule.AlarmLogIndexReq.page:type_name -> rule.PageInfo
	17, // 10: rule.AlarmLogIndexResp.list:type_name -> rule.AlarmLog
	2,  // 11: rule.AlarmInfoIndexReq.page:type_name -> rule.PageInfo
	20, // 12: rule.AlarmInfoIndexResp.list:type_name -> rule.AlarmInfo
	2,  // 13: rule.SceneInfoIndexReq.page:type_name -> rule.PageInfo
	25, // 14: rule.SceneInfoIndexResp.list:type_name -> rule.SceneInfo
	2,  // 15: rule.FlowInfoIndexReq.page:type_name -> rule.PageInfo
	28, // 16: rule.FlowInfoIndexResp.list:type_name -> rule.FlowInfo
	28, // 17: rule.RuleEngine.flowInfoCreate:input_type -> rule.FlowInfo
	28, // 18: rule.RuleEngine.flowInfoUpdate:input_type -> rule.FlowInfo
	0,  // 19: rule.RuleEngine.flowInfoDelete:input_type -> rule.WithID
	26, // 20: rule.RuleEngine.flowInfoIndex:input_type -> rule.FlowInfoIndexReq
	0,  // 21: rule.RuleEngine.flowInfoRead:input_type -> rule.WithID
	25, // 22: rule.SceneLinkage.sceneInfoCreate:input_type -> rule.SceneInfo
	25, // 23: rule.SceneLinkage.sceneInfoUpdate:input_type -> rule.SceneInfo
	0,  // 24: rule.SceneLinkage.sceneInfoDelete:input_type -> rule.WithID
	23, // 25: rule.SceneLinkage.sceneInfoIndex:input_type -> rule.SceneInfoIndexReq
	0,  // 26: rule.SceneLinkage.sceneInfoRead:input_type -> rule.WithID
	0,  // 27: rule.SceneLinkage.sceneManuallyTrigger:input_type -> rule.WithID
	20, // 28: rule.alarmCenter.alarmInfoCreate:input_type -> rule.AlarmInfo
	20, // 29: rule.alarmCenter.alarmInfoUpdate:input_type -> rule.AlarmInfo
	0,  // 30: rule.alarmCenter.alarmInfoDelete:input_type -> rule.WithID
	21, // 31: rule.alarmCenter.alarmInfoIndex:input_type -> rule.AlarmInfoIndexReq
	0,  // 32: rule.alarmCenter.alarmInfoRead:input_type -> rule.WithID
	12, // 33: rule.alarmCenter.alarmSceneMultiUpdate:input_type -> rule.alarmSceneMultiUpdateReq
	11, // 34: rule.alarmCenter.alarmSceneDelete:input_type -> rule.alarmSceneDeleteReq
	4,  // 35: rule.alarmCenter.alarmRecordIndex:input_type -> rule.AlarmRecordIndexReq
	8,  // 36: rule.alarmCenter.alarmTrigger:input_type -> rule.AlarmTriggerReq
	7,  // 37: rule.alarmCenter.alarmRelieve:input_type -> rule.AlarmRelieveReq
	18, // 38: rule.alarmCenter.alarmLogIndex:input_type -> rule.AlarmLogIndexReq
	13, // 39: rule.alarmCenter.alarmDealRecordCreate:input_type -> rule.alarmDealRecordCreateReq
	15, // 40: rule.alarmCenter.alarmDealRecordIndex:input_type -> rule.AlarmDealRecordIndexReq
	0,  // 41: rule.RuleEngine.flowInfoCreate:output_type -> rule.WithID
	1,  // 42: rule.RuleEngine.flowInfoUpdate:output_type -> rule.Empty
	1,  // 43: rule.RuleEngine.flowInfoDelete:output_type -> rule.Empty
	27, // 44: rule.RuleEngine.flowInfoIndex:output_type -> rule.FlowInfoIndexResp
	28, // 45: rule.RuleEngine.flowInfoRead:output_type -> rule.FlowInfo
	0,  // 46: rule.SceneLinkage.sceneInfoCreate:output_type -> rule.WithID
	1,  // 47: rule.SceneLinkage.sceneInfoUpdate:output_type -> rule.Empty
	1,  // 48: rule.SceneLinkage.sceneInfoDelete:output_type -> rule.Empty
	24, // 49: rule.SceneLinkage.sceneInfoIndex:output_type -> rule.SceneInfoIndexResp
	25, // 50: rule.SceneLinkage.sceneInfoRead:output_type -> rule.SceneInfo
	1,  // 51: rule.SceneLinkage.sceneManuallyTrigger:output_type -> rule.Empty
	0,  // 52: rule.alarmCenter.alarmInfoCreate:output_type -> rule.WithID
	1,  // 53: rule.alarmCenter.alarmInfoUpdate:output_type -> rule.Empty
	1,  // 54: rule.alarmCenter.alarmInfoDelete:output_type -> rule.Empty
	22, // 55: rule.alarmCenter.alarmInfoIndex:output_type -> rule.AlarmInfoIndexResp
	20, // 56: rule.alarmCenter.alarmInfoRead:output_type -> rule.AlarmInfo
	1,  // 57: rule.alarmCenter.alarmSceneMultiUpdate:output_type -> rule.Empty
	1,  // 58: rule.alarmCenter.alarmSceneDelete:output_type -> rule.Empty
	5,  // 59: rule.alarmCenter.alarmRecordIndex:output_type -> rule.AlarmRecordIndexResp
	0,  // 60: rule.alarmCenter.alarmTrigger:output_type -> rule.WithID
	0,  // 61: rule.alarmCenter.alarmRelieve:output_type -> rule.WithID
	19, // 62: rule.alarmCenter.alarmLogIndex:output_type -> rule.AlarmLogIndexResp
	0,  // 63: rule.alarmCenter.alarmDealRecordCreate:output_type -> rule.WithID
	16, // 64: rule.alarmCenter.alarmDealRecordIndex:output_type -> rule.AlarmDealRecordIndexResp
	41, // [41:65] is the sub-list for method output_type
	17, // [17:41] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_proto_rule_proto_init() }
func file_proto_rule_proto_init() {
	if File_proto_rule_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_rule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmRecordIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmRecordIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmRelieveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmTriggerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmSceneIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmSceneIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmSceneDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmSceneMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmDealRecordCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmDeal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmDealRecordIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmDealRecordIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmLogIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmLogIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rule_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_rule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_proto_rule_proto_goTypes,
		DependencyIndexes: file_proto_rule_proto_depIdxs,
		MessageInfos:      file_proto_rule_proto_msgTypes,
	}.Build()
	File_proto_rule_proto = out.File
	file_proto_rule_proto_rawDesc = nil
	file_proto_rule_proto_goTypes = nil
	file_proto_rule_proto_depIdxs = nil
}
