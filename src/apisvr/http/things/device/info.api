info(
    title: "设备管理模块"
    desc: "设备管理模块"
    author: "杨磊"
    email: "603685348@qq.com"
    version: "v1"
)

import "common.api"  //公共结构体定义

@server(
    group : things/device/info
    prefix: /api/v1/things/device/info
    middleware: SetupWare, CheckTokenWare, DataAuthWare, TeardownWare
)
service api {
    @doc "新增设备"
    @handler create
    post /create (DeviceInfoSaveReq) returns ()
    @doc "更新设备"
    @handler update
    post /update (DeviceInfoSaveReq) returns ()
    @doc "删除设备"
    @handler delete
    post /delete (DeviceInfoDeleteReq) returns ()
    @doc "获取设备信息列表"
    @handler index
    post /index (DeviceInfoIndexReq) returns (DeviceInfoIndexResp)
    @doc "获取设备信息详情"
    @handler read
    post /read (DeviceInfoReadReq) returns (DeviceInfo)
    @doc "设备统计详情"
    @handler count
    post /count (DeviceCountReq) returns (DeviceCountResp)
    @doc "批量导入设备"
    @handler multiImport
    post /multi-import (DeviceMultiImportReq) returns (DeviceMultiImportResp)
}

type (
    DeviceInfo struct {
        ProductID string `json:"productID"`                                               //产品id 只读
        ProjectID int64 `json:"projectID,string,optional"`                                               //项目id 只读
        AreaID int64 `json:"areaID,string,optional"`                                                     //项目区域id 只读
        DeviceName string `json:"deviceName"`                                             //设备名称 读写
        DeviceAlias *string `json:"deviceAlias,optional"`                                  //设备别名 读写
        Secret string `json:"secret,optional"`                                            //设备秘钥 只读
        Cert string `json:"cert,optional"`                                                // 设备证书  只读
        Imei string `json:"imei,optional"`                                                // IMEI号信息 只读
        Mac string `json:"mac,optional"`                                                  // MAC号信息 只读
        Version *string `json:"version,optional"`                                         // 固件版本  读写
        HardInfo string `json:"hardInfo,optional"`                                        // 模组硬件型号 只读
        SoftInfo string `json:"softInfo,optional"`                                        // 模组软件版本 只读
        MobileOperator int64    `json:"mobileOperator,optional,range=[0:4]"`                       //移动运营商:1)移动 2)联通 3)电信 4)广电
        Phone          *string   `json:"phone,optional"`                        //手机号
        Iccid          *string   `json:"iccid,optional"`                        //SIM卡卡号
        Position *Point `json:"position,optional"`                                        //设备定位,默认百度坐标系
        Address *string `json:"address,optional"`                                         //所在地址
        Tags []*Tag `json:"tags,optional"`                                                // 设备tag
        IsOnline int64 `json:"isOnline,optional,range=[0:2]"`                                         // 在线状态  1离线 2在线 只读
        FirstLogin int64 `json:"firstLogin,optional,string"`                              //激活时间 只读
        LastLogin int64 `json:"lastLogin,optional,string"`                                //最后上线时间 只读
        LogLevel int64 `json:"logLevel,optional,range=[0:5]"`                                         // 日志级别:1)关闭 2)错误 3)告警 4)信息 5)调试  读写
        CreatedTime int64 `json:"createdTime,optional,string"`                            //创建时间 只读
        WithProperties map[string]*DeviceInfoWithProperty `json:"withProperties,optional,omitempty"` //获取的属性列表,如果不传withProperty,则不会返回
    }
    DeviceInfoWithProperty struct{
        Value string `json:"value"`             //获取到的值
        Timestamp int64 `json:"timestamp,string"`               //发生时间戳
    }
    DeviceInfoSaveReq struct {
        ProductID string `json:"productID"`                                              //产品id 只读
        DeviceName string `json:"deviceName"`                                            //设备名称 读写
        DeviceAlias *string `json:"deviceAlias,optional"`                                 //设备别名 读写
        LogLevel int64 `json:"logLevel,optional,range=[0:5]"`                                        // 日志级别:1)关闭 2)错误 3)告警 4)信息 5)调试  读写
        Address *string `json:"address,optional"`                                        //所在地址
        Position *Point `json:"position,optional"`                                       //设备定位,默认百度坐标系
        Tags []*Tag `json:"tags,optional"`                                               // 设备tag
        Phone          *string   `json:"phone,optional"`                        //手机号
        Iccid          *string   `json:"iccid,optional"`                        //SIM卡卡号
        UserID         int64  `json:"userID,string,optional"`        // 用户id
        MobileOperator int64    `json:"mobileOperator,optional,range=[0:4]"`                       //移动运营商:1)移动 2)联通 3)电信 4)广电
        AreaID int64 `json:"areaID,string,optional"`      //项目区域id 只读（1: root节点 2: 未分类节点 其他:子节点）
    }
    DeviceInfoDeleteReq struct {
        ProductID string `json:"productID"`                                              //产品id 只读
        DeviceName string `json:"deviceName"`                                            //设备名称 读写
    }
    DeviceInfoReadReq struct {
        ProductID string `json:"productID,optional"`                                     //产品id 为空时获取所有产品
        DeviceName string `json:"deviceName"`                                            //设备名称 读写
        WithProperties []string `json:"withProperties,optional"`   //如果不为nil,如果为空,获取设备所有最新属性 如果传了属性列表,则会返回属性列表
    }

    DeviceInfoIndexReq struct {
        Page *PageInfo `json:"page,optional"`             //分页信息 只获取一个则不填
        ProductID string `json:"productID,optional"`      //产品id 为空时获取所有产品
        DeviceName string `json:"deviceName,optional"`    //过滤条件:模糊查询 设备名
        DeviceAlias string `json:"deviceAlias,optional"`  //过滤条件:模糊查询 设备别名
        Position *Point `json:"position,optional"`        //设备定位,默认百度坐标系，用于获取以该点为中心，Range范围内的设备列表，与Range连用
        Range int64 `json:"range,optional"`               //过滤条件:距离坐标点固定范围内的设备 单位：米
        Tags []*Tag `json:"tags,optional"`                // key tag过滤查询,非模糊查询 为tag的名,value为tag对应的值
        WithProperties []string `json:"withProperties,optional"`   //如果不为nil,如果为空,获取设备所有最新属性 如果传了属性列表,则会返回属性列表,如果没有匹配的则不会返回
        AreaIDs []int64 `json:"areaIDs,optional"`                  //项目区域ids
        IsOnline int64 `json:"isOnline,optional,range=[0:2]"`                                         // 在线状态过滤  1离线 2在线
    }
    DeviceInfoIndexResp struct {
        List []*DeviceInfo `json:"list"`    //设备信息
        Total int64 `json:"total"`          //总数(只有分页的时候会返回)
        Num int64 `json:"num"`              //返回的数量
    }
    DeviceCore {
        ProductID string `json:"productID"`      //产品ID
        DeviceName string `json:"deviceName"`    //设备名称
    }
    DeviceCountReq {
        StartTime int64 `json:"startTime,optional" form:"startTime,optional"`  //查询区间的开始时间（秒）
        EndTime int64 `json:"endTime,optional" form:"endTime,optional"`        //查询区间的结束时间（秒）
    }
    DeviceInfoCount {
        Online int64 `json:"online"`     // 在线设备数
        Offline int64 `json:"offline"`   // 离线设备数
        Inactive int64 `json:"inactive"` // 未激活设备数
        Unknown int64 `json:"unknown"`   // 未知设备数（all = 在线+离线+未激活+未知）
    }
    DeviceTypeCount {
        Device int64 `json:"device"`   // 设备类型数
        Gateway int64 `json:"gateway"` // 网关类型数
        Subset int64 `json:"subset"`   // 子设备类型数
        Unknown int64 `json:"unknown"` // 未知设备类型
    }
    DeviceCountResp {
        DeviceInfoCount DeviceInfoCount `json:"deviceCount"`
        DeviceTypeCount DeviceTypeCount `json:"deviceTypeCount"`
    }

    DeviceMultiImportReq {
        File []byte `form:"file,optional"`                //csv文件(实际必填)
    }
    DeviceMultiImportRow {
        Row int64 `json:"row"`                  //【提示】数据所在表格行
        ProductName string `json:"productName"` //【必填】产品名称
        DeviceName string `json:"deviceName"`   //【必填】设备名称
        DeviceAlias string `json:"deviceAlias"` //【选填】设备别名
        Secret string `json:"secret"`           //【选填】设备秘钥
        LogLevel string `json:"logLevel"`       //【选填】日志级别（关闭/错误/告警/信息/调试）
        Tags string `json:"tags"`               //【选填】设备标签（格式k1:v1;k2:v2;...）
        Position string `json:"position"`       //【选填】设备位置百度坐标（格式:经,纬）
        Address string `json:"address"`         //【选填】设备所在详细地址
        Tips string `json:"tips"`               //【提示】模板使用提示
    }
    DeviceMultiImportResp {
        Total int64 `json:"total"`                                 //当前表格数据量
        Headers *DeviceMultiImportRow `json:"headers"`             //表格表头信息
        Errdata []*DeviceMultiImportRow `json:"errdata"`           //批量导入错误清单
    }
    DeviceMultiImportErrdata {
        Row int64 `json:"row"`                   //错误所在表格行
        Msg string `json:"msg"`                  //详细错误信息
    }
)
