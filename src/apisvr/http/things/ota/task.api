info(
    title: "ota升级任务接口"
    desc: "ota升级任务接口"
    author: "Zev"
    email: "635665396@qq.com"
    version: "v1"
)
import "common.api"  //公共结构体定义
@server(
    group:things/ota/task
    prefix: api/v1/things/ota/task
)
service api {   
    @doc "获取升级批次任务列表"
    @handler index
    post /index (OtaTaskIndexReq) returns (OtaTaskIndexResp)
    @doc "升级任务信息"
    @handler read 
    post /read (OtaTaskReadReq) returns (OtaTaskReadResp)
    @doc "创建升级任务"
    @handler create
    post /create (OtaTaskCreateReq)
    @doc "取消所有升级中的任务"
    @handler  cancel
    post /cancel  (OtaTaskCancleReq)
    @doc "批次设备列表"
    @handler deviceIndex
    post /device-index (OtaTaskDeviceIndexReq) returns (OtaTaskDeviceIndexResp)
    @doc "升级状态统计"
    @handler analysis
    post /analysis (OtaTaskAnalysisReq) returns (OtaTaskAnalysisResp)
    @doc "取消单个设备升级"
    @handler deviceCancle
    post /device-cancel (OtaTaskDeviceCancleReq)
    @doc "重试单个设备升级"
    @handler deviceRetry
    post /device-retry (OtaTaskDeviceRetryReq)
}
type (
    OtaTaskIndexReq struct {
        FirmwareID int64 `json:"firmwareID"` //固件升级包编号
        TaskUid string `json:"taskUid,optional"`
        Page *PageInfo `json:"page,optional"`    //分页信息
    }
    OtaTaskIndexResp struct {
        Total int64 `json:"total"`//总数
        List []*OtaTaskInfo `json:"list"`
    }
    OtaTaskInfo struct {
        TaskID int64 `json:"taskID"`
        TaskUid string `json:"taskUid"` //批次号
        Type int32 `json:"type" enums:"1,2"`  //升级范围1全部设备2定向升级
        UpgradeType int32 `json:"upgradeType" enums:"1,2"`  //升级策略:1静态升级2动态升级
        Status int32 `json:"status"  enums:"1,2,3"` //升级状态:1未升级2升级中3完成
        CreatedTime int64 `json:"createdTime"`        //创建时间 只读
    }
    OtaTaskReadReq struct {
        TaskID int64 `json:"taskID"`
    }
    OtaTaskReadResp struct {
        TaskID int64 `json:"taskID"`
        TaskUid string `json:"taskUid"`
        Type int32 `json:"type"  enums:"1,2"`  //升级范围1全部设备2定向升级
        UpgradeType int32 `json:"upgradeType" enums:"1,2"`  //升级策略:1静态升级2动态升级
        Version string `json:"version"`  //升级包版本
        SrcVersion string `json:"srcVersion"` //待升级版本号
        SrcDevice string `json:"srcDevice"` //待升级设备
        ProductID string `json:"productID"`    //产品id
        ProductName string `json:"productName"` //产品名称
        Status int32 `json:"status" enums:"1,2,3"` //升级状态:1未升级2升级中3完成
        AutoRepeat int32 `json:"autoRepeat"` //是否自动重试,1:不,2自动重试,最多重试10次
        CreatedTime int64 `json:"createdTime"`        //创建时间 只读
    }
    OtaTaskCreateReq struct {
        FirmwareID int64 `json:"firmwareID"` //固件升级包编号
        Type int32 `json:"type"`  //升级范围1全部设备2定向升级
        UpgradeType int32 `json:"upgradeType"`  //升级策略:1静态升级2动态升级
        DeviceList string `json:"deviceList"` //待升级设备列表,["device1","device2",...]
        VersionList   string `json:"versionList"` //待升级版本,["version1","version2",...]
    }
    OtaTaskCancleReq struct {
        TaskID int64 `json:"taskID"`
    }
    OtaTaskDeviceIndexReq struct {
        TaskUid string `json:"taskUid"`
        DeviceName string `json:"deviceName,optional"` //设备编号
        Status int32 `json:"status,optional"` //升级状态:101待确认 201/202/203待推送 301已推送 401升级中 501升级成功 601升级失败 701已取消
        Page *PageInfo `json:"page,optional"`    //分页信息
    }
    OtaTaskDeviceIndexResp struct {
        List []*OtaTaskDeviceInfo `json:"list"`
        Total int64 `json:"total"`//总数
    }
    OtaTaskDeviceInfo struct {
        ID int64 `json:"id"` //
        TaskUid string `json:"taskUid"`
        DeviceName string `json:"deviceName"` //设备编号
        Version string `json:"version"` //当前版本
        Status int32 `json:"status"` //升级状态:101待确认 201/202/203待推送 301已推送 401升级中 501升级成功 601升级失败 701已取消
        UpdatedTime int64 `json:"updatedTime"`        //状态更新时间 只读
    }
    OtaTaskAnalysisReq struct {
        TaskUid string `json:"taskUid"`
    }
    OtaTaskAnalysisResp struct {
        Result string `json:"result"` //统计结果,json格式
    }
    OtaTaskDeviceCancleReq struct {
        ID int64 `json:"id"` //特定设备的升级id
    }
    OtaTaskDeviceRetryReq struct {
        ID int64 `json:"id"` //特定设备的升级id
    }
)