info(
    title: "ota升级附件接口"
    desc: "ota升级附件接口"
    author: "Zev"
    email: "635665396@qq.com"
    version: "v1"
)
import "common.api"  //公共结构体定义
@server(
    group : things/ota/firmware
    prefix: /api/v1/things/ota/firmware
)
service api {
    @doc "获取升级包列表"
    @handler index
    post /index (OtaFirmwareIndexReq) returns (OtaFirmwareIndexResp)
    @doc "更新升级包"
    @handler update
    post /update (OtaFirmwareInfoUpdateReq)
    @doc "获取升级包详情"
    @handler read
    post /read (OtaFirmwareReadReq) returns (OtaFirmwareReadResp)
    @doc "创建升级包版本"
    @handler create
    post /create (OtaFirmwareCreateReq)
    @doc "删除升级包"
    @handler delete
    post /delete (OtaFirmwareDelReq)
    @doc "获取升级包可选设备信息,包含可用版本"
    @handler deviceInfoRead
    post /device-info-read(OtaFirmwareDeviceInfoReq) returns (OtaFirmwareDeviceInfoResp)
}
type (
    OtaFirmwareIndexReq struct {
        ProductID string `json:"productID,optional,omitempty"`                         //产品id 获取产品id下的所有升级包
        TimeStart int64 `json:"timeStart,string,optional,omitempty"`          //获取时间的开始
        TimeEnd int64 `json:"timeEnd,string,optional,omitempty"`              //时间的结束
        Page *PageInfo `json:"page,optional"`           //分页信息
    }
    OtaFirmwareIndexResp struct {
        List []*OtaFirmwareIndex `json:"list"`//数据
        Total int64 `json:"total"`//总数
    }
    OtaFirmwareInfoUpdateReq struct {
        FirmwareID int64 `json:"firmwareID"` //固件升级包编号
        Name string `json:"name"`  //升级包名称
        Desc *string  `json:"desc"` //描述
        extData *string `json:"extData"` //自定义数据
    }
    OtaFirmwareIndex struct {
        FirmwareID int64 `json:"firmwareID"` //固件升级包编号
        Name string `json:"name"`  //升级包名称
        Version string `json:"version"`  //升级包版本
        ProductID string `json:"productID"`    //产品id
        ProductName string `json:"productName"` //产品名称
        IsDiff int32 `json:"isDiff" enums:"1,2"`  //是否差分包,1:整包,2:差分
        CreatedTime int64 `json:"createdTime"`        //创建时间 只读
        SignMethod string `json:"signMethod"` //签名方法
    }
    OtaFirmwareReadReq struct {
        FirmwareID int64 `json:"firmwareID"` //固件升级包编号
    }
    OtaFirmwareReadResp struct {
        FirmwareID int64 `json:"firmwareID"` //固件升级包编号
        Name string `json:"name"`  //升级包名称
        Version string `json:"version"`  //升级包版本
        ProductID string `json:"productID"`    //产品id
        ProductName string `json:"productName"` //产品名称
        IsDiff int32  `json:"isDiff" enums:"1,2"`  //是否差分包,1:整包,2:差分
        CreatedTime int64 `json:"createdTime"`        //创建时间 只读
        SignMethod string `json:"signMethod"` //签名方法
        Desc *string  `json:"desc"` //描述
        extData *string `json:"extData"` //自定义数据
        Files []*OtaFirmwareFileInfo `json:"files"`

    }
    OtaFirmwareInfo struct {
        FirmwareID int64 `json:"firmwareID"` //固件升级包编号
        Name string `json:"name"`  //升级包名称
        Version string `json:"version"`  //升级包版本
        ProductID string `json:"productID"`    //产品id
        ProductName string `json:"productName"` //产品名称
        IsDiff int32  `json:"isDiff" enums:"1,2"`  //是否差分包,1:整包,2:差分
        CreatedTime int64 `json:"createdTime"`        //创建时间 只读
        SignMethod string `json:"signMethod"` //签名方法
        Desc *string  `json:"desc"` //描述
        extData *string `json:"extData"` //自定义数据
    }
    OtaFirmwareCreateReq struct {
        Name string `json:"name"`  //升级包名称
        ProductID string `json:"productID"`    //产品id
        Version string `json:"version"`  //升级包版本
        IsDiff int32  `json:"isDiff" enums:"1,2"`  //是否差分包,1:整包,2:差分
        SignMethod string `json:"signMethod"` //签名方法 MD5/SHA@256
        Desc *string  `json:"desc"` //描述
        ExtData *string `json:"extData"` //自定义数据
        Files []*OtaFirmwareFile  `json:"files"`//升级包附件列表，最多支持上传20个文件，总文件大小不能超过1,000 MB。
    }
    OtaFirmwareFile struct {
        Filepath string `json:"filePath"` //附件地址，上传附件后接口应该返回 
        Name string `json:"name"` //附件原名，上传附件后接口应该返回
        //Size int32 `json:"size"` //附件大小，上传附件后接口应该返回
        //SignValue string `json:"signValue"` //签名，上传附件接口返回
    }
    OtaFirmwareFileInfo struct {
        Uri string `json:"uri"` //附件地址
        Name string `json:"name"` //附件原名
        Size int64 `json:"size"` //文件大小
        Signature string `json:"signature"` //签名值
    }
    OtaFirmwareDelReq  struct {
        FirmwareID int64 `json:"firmwareID"` //固件升级包编号
    }
    OtaFirmwareDeviceInfoReq struct {
        FirmwareID int64 `json:"firmwareID"` //固件升级包编号
    }
    OtaFirmwareDeviceInfoResp struct {
        Versions string `json:"versions"`
    }
)