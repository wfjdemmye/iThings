// Code generated by goctl. DO NOT EDIT.
// Source: sys.proto

package server

import (
	"context"

	"github.com/i-Things/things/src/syssvr/internal/logic/user"
	"github.com/i-Things/things/src/syssvr/internal/svc"
	"github.com/i-Things/things/src/syssvr/pb/sys"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	sys.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) UserCreate(ctx context.Context, in *sys.UserInfo) (*sys.UserCreateResp, error) {
	l := userlogic.NewUserCreateLogic(ctx, s.svcCtx)
	return l.UserCreate(in)
}

func (s *UserServer) UserIndex(ctx context.Context, in *sys.UserIndexReq) (*sys.UserIndexResp, error) {
	l := userlogic.NewUserIndexLogic(ctx, s.svcCtx)
	return l.UserIndex(in)
}

func (s *UserServer) UserUpdate(ctx context.Context, in *sys.UserInfo) (*sys.Response, error) {
	l := userlogic.NewUserUpdateLogic(ctx, s.svcCtx)
	return l.UserUpdate(in)
}

func (s *UserServer) UserRead(ctx context.Context, in *sys.UserReadReq) (*sys.UserInfo, error) {
	l := userlogic.NewUserReadLogic(ctx, s.svcCtx)
	return l.UserRead(in)
}

func (s *UserServer) UserDelete(ctx context.Context, in *sys.UserDeleteReq) (*sys.Response, error) {
	l := userlogic.NewUserDeleteLogic(ctx, s.svcCtx)
	return l.UserDelete(in)
}

func (s *UserServer) UserLogin(ctx context.Context, in *sys.UserLoginReq) (*sys.UserLoginResp, error) {
	l := userlogic.NewUserLoginLogic(ctx, s.svcCtx)
	return l.UserLogin(in)
}

func (s *UserServer) UserCheckToken(ctx context.Context, in *sys.UserCheckTokenReq) (*sys.UserCheckTokenResp, error) {
	l := userlogic.NewUserCheckTokenLogic(ctx, s.svcCtx)
	return l.UserCheckToken(in)
}

func (s *UserServer) UserRegister1(ctx context.Context, in *sys.UserRegister1Req) (*sys.UserRegister1Resp, error) {
	l := userlogic.NewUserRegister1Logic(ctx, s.svcCtx)
	return l.UserRegister1(in)
}

func (s *UserServer) UserRegister2(ctx context.Context, in *sys.UserRegister2Req) (*sys.Response, error) {
	l := userlogic.NewUserRegister2Logic(ctx, s.svcCtx)
	return l.UserRegister2(in)
}

func (s *UserServer) UserAuthProjectMultiUpdate(ctx context.Context, in *sys.UserAuthProjectMultiUpdateReq) (*sys.Response, error) {
	l := userlogic.NewUserAuthProjectMultiUpdateLogic(ctx, s.svcCtx)
	return l.UserAuthProjectMultiUpdate(in)
}

func (s *UserServer) UserAuthProjectIndex(ctx context.Context, in *sys.UserAuthProjectIndexReq) (*sys.UserAuthProjectIndexResp, error) {
	l := userlogic.NewUserAuthProjectIndexLogic(ctx, s.svcCtx)
	return l.UserAuthProjectIndex(in)
}

func (s *UserServer) UserAuthAreaMultiUpdate(ctx context.Context, in *sys.UserAuthAreaMultiUpdateReq) (*sys.Response, error) {
	l := userlogic.NewUserAuthAreaMultiUpdateLogic(ctx, s.svcCtx)
	return l.UserAuthAreaMultiUpdate(in)
}

func (s *UserServer) UserAuthAreaIndex(ctx context.Context, in *sys.UserAuthAreaIndexReq) (*sys.UserAuthAreaIndexResp, error) {
	l := userlogic.NewUserAuthAreaIndexLogic(ctx, s.svcCtx)
	return l.UserAuthAreaIndex(in)
}
